; ModuleID = 'io'
source_filename = "io.rcp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%string = type { ptr, i64 }
%slice.5 = type { i64, ptr }
%init.TypeInfo = type { i64, %init.TypeUnion }
%init.TypeUnion = type { %init.StructType }
%init.StructType = type { %slice, %string, i32 }
%slice = type { i64, ptr }
%slice.1 = type { i64, ptr }
%init.BasicType = type { i64, i32, i32, %string }
%init.FunctionType = type { %slice.1, %slice.1 }
%init.PointerType = type { i64, i1 }
%init.ArrayType = type { i64, i32 }
%init.SliceType = type { i64 }
%init.EnumType = type { %string, %slice.2, i64 }
%slice.2 = type { i64, ptr }
%init.GenericType = type { %string }
%init.Arg = type { i64, ptr }
%init.StructMember = type { %string, i64 }
%mem.Allocator = type { ptr, ptr, ptr }
%slice.6 = type { i64, ptr }
%slice.3 = type { i64, ptr }
%slice.7 = type { i64, ptr }

@main.test_string = external global %string
@init.INVALID_TYPE = external global i64
@init.type_table = external global %slice.5
@os.STD_INPUT_HANDLE = external global i32
@os.STD_OUTPUT_HANDLE = external global i32
@os.STD_ERROR_HANDLE = external global i32
@os.INVALID_HANDLE_VALUE = external global ptr
@os.CP_UTF7 = external global i32
@os.CP_UTF8 = external global i32
@os.MEM_COMMIT = external global i32
@os.MEM_RESERVE = external global i32
@os.MEM_RELEASE = external global i32
@os.PAGE_NOACCESS = external global i32
@os.PAGE_READONLY = external global i32
@os.PAGE_READWRITE = external global i32
@os.PAGE_WRITECOPY = external global i32
@os.PAGE_EXECUTE = external global i32
@os.PAGE_EXECUTE_READ = external global i32
@os.PAGE_EXECUTE_READWRITE = external global i32
@os.PAGE_EXECUTE_WRITECOPY = external global i32
@os.PAGE_GUARD = external global i32
@os.PAGE_NOCACHE = external global i32
@os.PAGE_WRITECOMBINE = external global i32
@str.CONTINUE_BIT = external global i8
@0 = private unnamed_addr constant [8 x i8] c"invalid\00", align 1
@1 = private unnamed_addr constant [4 x i8] c"fn(\00", align 1
@2 = private unnamed_addr constant [3 x i8] c", \00", align 1
@3 = private unnamed_addr constant [2 x i8] c")\00", align 1
@4 = private unnamed_addr constant [5 x i8] c" -> \00", align 1
@5 = private unnamed_addr constant [3 x i8] c", \00", align 1
@6 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@7 = private unnamed_addr constant [4 x i8] c"[x]\00", align 1
@8 = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@9 = private unnamed_addr constant [3 x i8] c"<>\00", align 1
@10 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@11 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@12 = private unnamed_addr constant [4 x i8] c" { \00", align 1
@13 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@14 = private unnamed_addr constant [3 x i8] c", \00", align 1
@15 = private unnamed_addr constant [3 x i8] c" }\00", align 1
@16 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@17 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

define void @io.__GlobalInitializerFunction.0() {
block_0:
  ret void
}

declare i32 @main.main()

declare void @json.get_item(ptr, ptr, ptr)

declare void @json.parse(ptr, ptr, ptr)

declare void @json.create_dict(ptr, ptr)

declare void @json.add_kvp(ptr, ptr, ptr)

declare i1 @json.is_whitespace(i32)

declare i32 @json.peek_char(ptr)

declare i32 @json.next_char(ptr)

declare i32 @json.eat_char(ptr, i32)

declare void @json.eat_whitespace(ptr)

declare void @json.parse_string(ptr, ptr)

declare void @json.make_parser(ptr, ptr)

declare i1 @json.is_number(i32)

declare void @json.parse_number(ptr, ptr)

declare void @json.parse_literal(ptr, ptr)

declare void @json.parse_value(ptr, ptr, ptr)

declare void @json.parse_array(ptr, ptr, ptr)

declare void @json.parse_object(ptr, ptr, ptr)

declare void @init.global_initializers()

declare i64 @init.get_struct_alignment(i64)

declare i64 @init.get_type_alignment(i64)

declare i64 @init.get_basic_type_size(ptr)

declare i64 @init.get_struct_size(i64)

declare i64 @init.get_type_size(i64)

declare i64 @init.get_struct_member_offset(ptr, i64)

declare i32 @main.main.1()

declare i32 @main()

declare void @os.assert(i1, ptr)

declare i1 @WriteFile(ptr, ptr, i32, ptr, ptr)

declare ptr @GetStdHandle(i32)

declare void @ExitProcess(i32)

declare i32 @SetConsoleOutputCP(i32)

declare ptr @VirtualAlloc(ptr, i64, i32, i32)

declare i1 @VirtualFree(ptr, i64, i32)

declare i1 @ReadConsoleA(ptr, ptr, i32, ptr, ptr)

declare void @os.abort()

declare void @os.print(ptr, i32)

declare ptr @os.alloc(i64)

declare void @os.free(ptr)

declare i32 @os.read_stdin_line(ptr, i32)

define void @io.push_string(ptr %0, ptr %1) !dbg !82 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca %string, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store ptr %0, ptr %2, align 8, !dbg !100
  call void @llvm.dbg.value(metadata ptr %2, metadata !101, metadata !DIExpression()), !dbg !100
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !100
  call void @llvm.dbg.value(metadata ptr %3, metadata !102, metadata !DIExpression()), !dbg !100
  %7 = getelementptr inbounds %string, ptr %3, i32 0, i32 1, !dbg !103
  %8 = load i64, ptr %7, align 8, !dbg !103
  %9 = getelementptr inbounds %string, ptr %3, i32 0, i32 0, !dbg !103
  %10 = load ptr, ptr %9, align 8, !dbg !103
  store ptr %10, ptr %4, align 8, !dbg !103
  store i64 0, ptr %5, align 8, !dbg !103
  br label %block_1, !dbg !103

block_1:                                          ; preds = %block_3, %block_0
  %11 = load i64, ptr %5, align 8, !dbg !103
  %12 = icmp ult i64 %11, %8, !dbg !103
  br i1 %12, label %block_2, label %block_4, !dbg !103

block_2:                                          ; preds = %block_1
  %13 = load ptr, ptr %4, align 8, !dbg !103
  %14 = call i32 @str.deref(ptr %13), !dbg !103
  store i32 %14, ptr %6, align 4, !dbg !103
  call void @llvm.dbg.declare(metadata ptr %6, metadata !104, metadata !DIExpression()), !dbg !103
  call void @llvm.dbg.declare(metadata ptr %5, metadata !105, metadata !DIExpression()), !dbg !103
  %15 = load ptr, ptr %2, align 8, !dbg !106
  %16 = load i32, ptr %6, align 4, !dbg !106
  call void @"array.add:(*[]u32,u32)->void"(ptr %15, i32 %16), !dbg !106
  br label %block_3, !dbg !106

block_3:                                          ; preds = %block_2
  %17 = load i64, ptr %5, align 8, !dbg !106
  %18 = add i64 %17, 1, !dbg !106
  store i64 %18, ptr %5, align 8, !dbg !106
  %19 = load ptr, ptr %4, align 8, !dbg !106
  %20 = call ptr @str.advance(ptr %19), !dbg !106
  store ptr %20, ptr %4, align 8, !dbg !106
  br label %block_1, !dbg !106

block_4:                                          ; preds = %block_1
  ret void, !dbg !107
}

define void @io.format_uint(ptr %0, i64 %1) !dbg !108 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca i64, align 8
  %4 = alloca [256 x i32], align 4
  %5 = alloca [256 x i32], align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  store ptr %0, ptr %2, align 8, !dbg !112
  call void @llvm.dbg.value(metadata ptr %2, metadata !113, metadata !DIExpression()), !dbg !112
  store i64 %1, ptr %3, align 8, !dbg !112
  call void @llvm.dbg.value(metadata ptr %3, metadata !114, metadata !DIExpression()), !dbg !112
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %5, ptr align 4 %4, i64 1024, i1 false), !dbg !115
  call void @llvm.dbg.declare(metadata ptr %5, metadata !116, metadata !DIExpression()), !dbg !115
  %11 = load i64, ptr %3, align 8, !dbg !120
  store i64 %11, ptr %6, align 8, !dbg !120
  call void @llvm.dbg.declare(metadata ptr %6, metadata !121, metadata !DIExpression()), !dbg !120
  %12 = load i64, ptr %6, align 8, !dbg !122
  %13 = icmp eq i64 %12, 0, !dbg !122
  br i1 %13, label %block_1, label %block_2, !dbg !122

block_1:                                          ; preds = %block_0
  %14 = load ptr, ptr %2, align 8, !dbg !123
  call void @"array.add:(*[]u32,u32)->void"(ptr %14, i32 48), !dbg !123
  ret void, !dbg !124

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !124

block_3:                                          ; preds = %block_2
  store i64 0, ptr %7, align 8, !dbg !125
  call void @llvm.dbg.declare(metadata ptr %7, metadata !126, metadata !DIExpression()), !dbg !125
  br label %block_4, !dbg !127

block_4:                                          ; preds = %block_5, %block_3
  %15 = load i64, ptr %6, align 8, !dbg !127
  %16 = icmp ugt i64 %15, 0, !dbg !127
  br i1 %16, label %block_5, label %block_6, !dbg !127

block_5:                                          ; preds = %block_4
  %17 = load i64, ptr %6, align 8, !dbg !128
  %18 = urem i64 %17, 10, !dbg !128
  store i64 %18, ptr %8, align 8, !dbg !128
  call void @llvm.dbg.declare(metadata ptr %8, metadata !129, metadata !DIExpression()), !dbg !128
  %19 = load i64, ptr %6, align 8, !dbg !130
  %20 = udiv i64 %19, 10, !dbg !130
  store i64 %20, ptr %6, align 8, !dbg !130
  %21 = load i64, ptr %8, align 8, !dbg !131
  %22 = add i64 48, %21, !dbg !131
  store i64 %22, ptr %9, align 8, !dbg !131
  call void @llvm.dbg.declare(metadata ptr %9, metadata !132, metadata !DIExpression()), !dbg !131
  %23 = load i64, ptr %7, align 8, !dbg !133
  %24 = getelementptr [256 x i32], ptr %5, i64 0, i64 %23, !dbg !133
  %25 = load i64, ptr %9, align 8, !dbg !133
  %26 = trunc i64 %25 to i32, !dbg !133
  store i32 %26, ptr %24, align 4, !dbg !133
  %27 = load i64, ptr %7, align 8, !dbg !134
  %28 = add i64 %27, 1, !dbg !134
  store i64 %28, ptr %7, align 8, !dbg !134
  br label %block_4, !dbg !134

block_6:                                          ; preds = %block_4
  %29 = load i64, ptr %7, align 8, !dbg !135
  store i64 0, ptr %10, align 8, !dbg !135
  br label %block_7, !dbg !135

block_7:                                          ; preds = %block_9, %block_6
  %30 = load i64, ptr %10, align 8, !dbg !135
  %31 = icmp ult i64 %30, %29, !dbg !135
  br i1 %31, label %block_8, label %block_10, !dbg !135

block_8:                                          ; preds = %block_7
  call void @llvm.dbg.declare(metadata ptr %10, metadata !136, metadata !DIExpression()), !dbg !135
  %32 = load ptr, ptr %2, align 8, !dbg !137
  %33 = load i64, ptr %7, align 8, !dbg !137
  %34 = load i64, ptr %10, align 8, !dbg !137
  %35 = sub i64 %33, %34, !dbg !137
  %36 = sub i64 %35, 1, !dbg !137
  %37 = getelementptr [256 x i32], ptr %5, i64 0, i64 %36, !dbg !137
  %38 = load i32, ptr %37, align 4, !dbg !137
  call void @"array.add:(*[]u32,u32)->void"(ptr %32, i32 %38), !dbg !137
  br label %block_9, !dbg !137

block_9:                                          ; preds = %block_8
  %39 = load i64, ptr %10, align 8, !dbg !137
  %40 = add i64 %39, 1, !dbg !137
  store i64 %40, ptr %10, align 8, !dbg !137
  br label %block_7, !dbg !137

block_10:                                         ; preds = %block_7
  ret void, !dbg !138
}

define void @io.format_int(ptr %0, i64 %1) !dbg !139 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca i64, align 8
  %4 = alloca [256 x i32], align 4
  %5 = alloca [256 x i32], align 4
  %6 = alloca i64, align 8
  %7 = alloca i1, align 1
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  store ptr %0, ptr %2, align 8, !dbg !142
  call void @llvm.dbg.value(metadata ptr %2, metadata !143, metadata !DIExpression()), !dbg !142
  store i64 %1, ptr %3, align 8, !dbg !142
  call void @llvm.dbg.value(metadata ptr %3, metadata !144, metadata !DIExpression()), !dbg !142
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %5, ptr align 4 %4, i64 1024, i1 false), !dbg !145
  call void @llvm.dbg.declare(metadata ptr %5, metadata !146, metadata !DIExpression()), !dbg !145
  %12 = load i64, ptr %3, align 8, !dbg !147
  store i64 %12, ptr %6, align 8, !dbg !147
  call void @llvm.dbg.declare(metadata ptr %6, metadata !148, metadata !DIExpression()), !dbg !147
  %13 = load i64, ptr %6, align 8, !dbg !149
  %14 = icmp eq i64 %13, 0, !dbg !149
  br i1 %14, label %block_1, label %block_2, !dbg !149

block_1:                                          ; preds = %block_0
  %15 = load ptr, ptr %2, align 8, !dbg !150
  call void @"array.add:(*[]u32,u32)->void"(ptr %15, i32 48), !dbg !150
  ret void, !dbg !151

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !151

block_3:                                          ; preds = %block_2
  store i1 false, ptr %7, align 1, !dbg !152
  call void @llvm.dbg.declare(metadata ptr %7, metadata !153, metadata !DIExpression()), !dbg !152
  %16 = load i64, ptr %6, align 8, !dbg !155
  %17 = icmp slt i64 %16, 0, !dbg !155
  br i1 %17, label %block_4, label %block_5, !dbg !155

block_4:                                          ; preds = %block_3
  %18 = load i64, ptr %6, align 8, !dbg !156
  %19 = sub i64 0, %18, !dbg !156
  store i64 %19, ptr %6, align 8, !dbg !156
  store i1 true, ptr %7, align 1, !dbg !157
  br label %block_6, !dbg !157

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !157

block_6:                                          ; preds = %block_5, %block_4
  store i64 0, ptr %8, align 8, !dbg !158
  call void @llvm.dbg.declare(metadata ptr %8, metadata !159, metadata !DIExpression()), !dbg !158
  br label %block_7, !dbg !160

block_7:                                          ; preds = %block_8, %block_6
  %20 = load i64, ptr %6, align 8, !dbg !160
  %21 = icmp sgt i64 %20, 0, !dbg !160
  br i1 %21, label %block_8, label %block_9, !dbg !160

block_8:                                          ; preds = %block_7
  %22 = load i64, ptr %6, align 8, !dbg !161
  %23 = srem i64 %22, 10, !dbg !161
  store i64 %23, ptr %9, align 8, !dbg !161
  call void @llvm.dbg.declare(metadata ptr %9, metadata !162, metadata !DIExpression()), !dbg !161
  %24 = load i64, ptr %6, align 8, !dbg !163
  %25 = sdiv i64 %24, 10, !dbg !163
  store i64 %25, ptr %6, align 8, !dbg !163
  %26 = load i64, ptr %9, align 8, !dbg !164
  %27 = trunc i64 %26 to i8, !dbg !164
  %28 = zext i8 %27 to i32, !dbg !164
  %29 = add i32 48, %28, !dbg !164
  store i32 %29, ptr %10, align 4, !dbg !164
  call void @llvm.dbg.declare(metadata ptr %10, metadata !165, metadata !DIExpression()), !dbg !164
  %30 = load i64, ptr %8, align 8, !dbg !166
  %31 = getelementptr [256 x i32], ptr %5, i64 0, i64 %30, !dbg !166
  %32 = load i32, ptr %10, align 4, !dbg !166
  store i32 %32, ptr %31, align 4, !dbg !166
  %33 = load i64, ptr %8, align 8, !dbg !167
  %34 = add i64 %33, 1, !dbg !167
  store i64 %34, ptr %8, align 8, !dbg !167
  br label %block_7, !dbg !167

block_9:                                          ; preds = %block_7
  %35 = load i1, ptr %7, align 1, !dbg !168
  br i1 %35, label %block_10, label %block_11, !dbg !168

block_10:                                         ; preds = %block_9
  %36 = load ptr, ptr %2, align 8, !dbg !168
  call void @"array.add:(*[]u32,u32)->void"(ptr %36, i32 45), !dbg !168
  br label %block_12, !dbg !168

block_11:                                         ; preds = %block_9
  br label %block_12, !dbg !168

block_12:                                         ; preds = %block_11, %block_10
  %37 = load i64, ptr %8, align 8, !dbg !169
  store i64 0, ptr %11, align 8, !dbg !169
  br label %block_13, !dbg !169

block_13:                                         ; preds = %block_15, %block_12
  %38 = load i64, ptr %11, align 8, !dbg !169
  %39 = icmp ult i64 %38, %37, !dbg !169
  br i1 %39, label %block_14, label %block_16, !dbg !169

block_14:                                         ; preds = %block_13
  call void @llvm.dbg.declare(metadata ptr %11, metadata !170, metadata !DIExpression()), !dbg !169
  %40 = load ptr, ptr %2, align 8, !dbg !171
  %41 = load i64, ptr %8, align 8, !dbg !171
  %42 = load i64, ptr %11, align 8, !dbg !171
  %43 = sub i64 %41, %42, !dbg !171
  %44 = sub i64 %43, 1, !dbg !171
  %45 = getelementptr [256 x i32], ptr %5, i64 0, i64 %44, !dbg !171
  %46 = load i32, ptr %45, align 4, !dbg !171
  call void @"array.add:(*[]u32,u32)->void"(ptr %40, i32 %46), !dbg !171
  br label %block_15, !dbg !171

block_15:                                         ; preds = %block_14
  %47 = load i64, ptr %11, align 8, !dbg !171
  %48 = add i64 %47, 1, !dbg !171
  store i64 %48, ptr %11, align 8, !dbg !171
  br label %block_13, !dbg !171

block_16:                                         ; preds = %block_13
  ret void, !dbg !172
}

define void @io.print_typetype(ptr %0, ptr %1) !dbg !173 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca %init.TypeInfo, align 8
  %4 = alloca %string, align 8
  %5 = alloca %string, align 8
  %6 = alloca %string, align 8
  %7 = alloca %slice.1, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %init.TypeInfo, align 8
  %11 = alloca %string, align 8
  %12 = alloca %string, align 8
  %13 = alloca %string, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca %string, align 8
  %17 = alloca %init.TypeInfo, align 8
  %18 = alloca %string, align 8
  %19 = alloca %string, align 8
  %20 = alloca %init.TypeInfo, align 8
  %21 = alloca %string, align 8
  %22 = alloca %init.TypeInfo, align 8
  %23 = alloca %string, align 8
  %24 = alloca %init.TypeInfo, align 8
  %25 = alloca %string, align 8
  %26 = alloca %string, align 8
  %27 = alloca %string, align 8
  store ptr %0, ptr %2, align 8, !dbg !242
  call void @llvm.dbg.value(metadata ptr %2, metadata !243, metadata !DIExpression()), !dbg !242
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 48, i1 false), !dbg !242
  call void @llvm.dbg.value(metadata ptr %3, metadata !244, metadata !DIExpression()), !dbg !242
  %28 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 0, !dbg !245
  %29 = load i64, ptr %28, align 8, !dbg !245
  switch i64 %29, label %block_1 [
    i64 0, label %block_2
    i64 1, label %block_3
    i64 2, label %block_4
    i64 3, label %block_22
    i64 4, label %block_23
    i64 5, label %block_24
    i64 6, label %block_25
    i64 7, label %block_26
    i64 8, label %block_27
    i64 9, label %block_28
  ], !dbg !245

block_2:                                          ; preds = %block_0
  %30 = load ptr, ptr %2, align 8, !dbg !246
  %31 = alloca %string, align 8, !dbg !246
  %String = getelementptr inbounds %string, ptr %31, i32 0, i32 0, !dbg !246
  %Size = getelementptr inbounds %string, ptr %31, i32 0, i32 1, !dbg !246
  store ptr @0, ptr %String, align 8, !dbg !246
  store i64 7, ptr %Size, align 8, !dbg !246
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %31, i64 16, i1 false), !dbg !246
  call void @io.push_string(ptr %30, ptr %4), !dbg !246
  br label %block_1, !dbg !246

block_3:                                          ; preds = %block_0
  %32 = load ptr, ptr %2, align 8, !dbg !247
  %33 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !247
  %34 = getelementptr inbounds %init.BasicType, ptr %33, i32 0, i32 3, !dbg !247
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %34, i64 16, i1 false), !dbg !247
  call void @io.push_string(ptr %32, ptr %5), !dbg !247
  br label %block_1, !dbg !247

block_4:                                          ; preds = %block_0
  %35 = load ptr, ptr %2, align 8, !dbg !248
  %36 = alloca %string, align 8, !dbg !248
  %String1 = getelementptr inbounds %string, ptr %36, i32 0, i32 0, !dbg !248
  %Size2 = getelementptr inbounds %string, ptr %36, i32 0, i32 1, !dbg !248
  store ptr @1, ptr %String1, align 8, !dbg !248
  store i64 3, ptr %Size2, align 8, !dbg !248
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %36, i64 16, i1 false), !dbg !248
  call void @io.push_string(ptr %35, ptr %6), !dbg !248
  %37 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !249
  %38 = getelementptr inbounds %init.FunctionType, ptr %37, i32 0, i32 1, !dbg !249
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %38, i64 16, i1 false), !dbg !249
  call void @llvm.dbg.declare(metadata ptr %7, metadata !250, metadata !DIExpression()), !dbg !249
  %39 = getelementptr inbounds %slice.1, ptr %7, i32 0, i32 0, !dbg !251
  %40 = load i64, ptr %39, align 8, !dbg !251
  store i64 0, ptr %8, align 8, !dbg !251
  br label %block_5, !dbg !251

block_5:                                          ; preds = %block_7, %block_4
  %41 = load i64, ptr %8, align 8, !dbg !251
  %42 = icmp ult i64 %41, %40, !dbg !251
  br i1 %42, label %block_6, label %block_8, !dbg !251

block_6:                                          ; preds = %block_5
  %43 = load i64, ptr %8, align 8, !dbg !251
  %44 = getelementptr inbounds %slice.1, ptr %7, i32 0, i32 1, !dbg !251
  %45 = load ptr, ptr %44, align 8, !dbg !251
  %46 = getelementptr i64, ptr %45, i64 %43, !dbg !251
  %47 = load i64, ptr %46, align 8, !dbg !251
  store i64 %47, ptr %9, align 8, !dbg !251
  call void @llvm.dbg.declare(metadata ptr %9, metadata !252, metadata !DIExpression()), !dbg !251
  call void @llvm.dbg.declare(metadata ptr %8, metadata !253, metadata !DIExpression()), !dbg !251
  %48 = load ptr, ptr %2, align 8, !dbg !254
  %49 = load i64, ptr %9, align 8, !dbg !254
  %50 = load ptr, ptr getelementptr inbounds (%slice.5, ptr @init.type_table, i32 0, i32 1), align 8, !dbg !254
  %51 = getelementptr %init.TypeInfo, ptr %50, i64 %49, !dbg !254
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %10, ptr align 8 %51, i64 48, i1 false), !dbg !254
  call void @io.print_typetype(ptr %48, ptr %10), !dbg !254
  %52 = load i64, ptr %8, align 8, !dbg !255
  %53 = add i64 %52, 1, !dbg !255
  %54 = getelementptr inbounds %slice.1, ptr %7, i32 0, i32 0, !dbg !255
  %55 = load i64, ptr %54, align 8, !dbg !255
  %56 = icmp ne i64 %53, %55, !dbg !255
  br i1 %56, label %block_9, label %block_10, !dbg !255

block_9:                                          ; preds = %block_6
  %57 = load ptr, ptr %2, align 8, !dbg !256
  %58 = alloca %string, align 8, !dbg !256
  %String3 = getelementptr inbounds %string, ptr %58, i32 0, i32 0, !dbg !256
  %Size4 = getelementptr inbounds %string, ptr %58, i32 0, i32 1, !dbg !256
  store ptr @2, ptr %String3, align 8, !dbg !256
  store i64 2, ptr %Size4, align 8, !dbg !256
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %58, i64 16, i1 false), !dbg !256
  call void @io.push_string(ptr %57, ptr %11), !dbg !256
  br label %block_11, !dbg !256

block_10:                                         ; preds = %block_6
  br label %block_11, !dbg !256

block_11:                                         ; preds = %block_10, %block_9
  br label %block_7, !dbg !256

block_7:                                          ; preds = %block_11
  %59 = load i64, ptr %8, align 8, !dbg !256
  %60 = add i64 %59, 1, !dbg !256
  store i64 %60, ptr %8, align 8, !dbg !256
  br label %block_5, !dbg !256

block_8:                                          ; preds = %block_5
  %61 = load ptr, ptr %2, align 8, !dbg !257
  %62 = alloca %string, align 8, !dbg !257
  %String5 = getelementptr inbounds %string, ptr %62, i32 0, i32 0, !dbg !257
  %Size6 = getelementptr inbounds %string, ptr %62, i32 0, i32 1, !dbg !257
  store ptr @3, ptr %String5, align 8, !dbg !257
  store i64 1, ptr %Size6, align 8, !dbg !257
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %62, i64 16, i1 false), !dbg !257
  call void @io.push_string(ptr %61, ptr %12), !dbg !257
  %63 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !258
  %64 = getelementptr inbounds %init.FunctionType, ptr %63, i32 0, i32 0, !dbg !258
  %65 = getelementptr inbounds %slice.1, ptr %64, i32 0, i32 0, !dbg !258
  %66 = load i64, ptr %65, align 8, !dbg !258
  %67 = icmp ne i64 %66, 0, !dbg !258
  br i1 %67, label %block_12, label %block_13, !dbg !258

block_12:                                         ; preds = %block_8
  %68 = load ptr, ptr %2, align 8, !dbg !259
  %69 = alloca %string, align 8, !dbg !259
  %String7 = getelementptr inbounds %string, ptr %69, i32 0, i32 0, !dbg !259
  %Size8 = getelementptr inbounds %string, ptr %69, i32 0, i32 1, !dbg !259
  store ptr @4, ptr %String7, align 8, !dbg !259
  store i64 4, ptr %Size8, align 8, !dbg !259
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %69, i64 16, i1 false), !dbg !259
  call void @io.push_string(ptr %68, ptr %13), !dbg !259
  %70 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !260
  %71 = getelementptr inbounds %init.FunctionType, ptr %70, i32 0, i32 0, !dbg !260
  %72 = getelementptr inbounds %slice.1, ptr %71, i32 0, i32 0, !dbg !260
  %73 = load i64, ptr %72, align 8, !dbg !260
  store i64 0, ptr %14, align 8, !dbg !260
  br label %block_15, !dbg !260

block_15:                                         ; preds = %block_17, %block_12
  %74 = load i64, ptr %14, align 8, !dbg !260
  %75 = icmp ult i64 %74, %73, !dbg !260
  br i1 %75, label %block_16, label %block_18, !dbg !260

block_16:                                         ; preds = %block_15
  %76 = load i64, ptr %14, align 8, !dbg !260
  %77 = getelementptr inbounds %slice.1, ptr %71, i32 0, i32 1, !dbg !260
  %78 = load ptr, ptr %77, align 8, !dbg !260
  %79 = getelementptr i64, ptr %78, i64 %76, !dbg !260
  %80 = load i64, ptr %79, align 8, !dbg !260
  store i64 %80, ptr %15, align 8, !dbg !260
  call void @llvm.dbg.declare(metadata ptr %15, metadata !261, metadata !DIExpression()), !dbg !260
  call void @llvm.dbg.declare(metadata ptr %14, metadata !262, metadata !DIExpression()), !dbg !260
  %81 = load i64, ptr %14, align 8, !dbg !263
  %82 = icmp ne i64 %81, 0, !dbg !263
  br i1 %82, label %block_19, label %block_20, !dbg !263

block_19:                                         ; preds = %block_16
  %83 = load ptr, ptr %2, align 8, !dbg !264
  %84 = alloca %string, align 8, !dbg !264
  %String9 = getelementptr inbounds %string, ptr %84, i32 0, i32 0, !dbg !264
  %Size10 = getelementptr inbounds %string, ptr %84, i32 0, i32 1, !dbg !264
  store ptr @5, ptr %String9, align 8, !dbg !264
  store i64 2, ptr %Size10, align 8, !dbg !264
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %84, i64 16, i1 false), !dbg !264
  call void @io.push_string(ptr %83, ptr %16), !dbg !264
  br label %block_21, !dbg !264

block_20:                                         ; preds = %block_16
  br label %block_21, !dbg !264

block_21:                                         ; preds = %block_20, %block_19
  %85 = load ptr, ptr %2, align 8, !dbg !265
  %86 = load i64, ptr %15, align 8, !dbg !265
  %87 = load ptr, ptr getelementptr inbounds (%slice.5, ptr @init.type_table, i32 0, i32 1), align 8, !dbg !265
  %88 = getelementptr %init.TypeInfo, ptr %87, i64 %86, !dbg !265
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr align 8 %88, i64 48, i1 false), !dbg !265
  call void @io.print_typetype(ptr %85, ptr %17), !dbg !265
  br label %block_17, !dbg !265

block_17:                                         ; preds = %block_21
  %89 = load i64, ptr %14, align 8, !dbg !265
  %90 = add i64 %89, 1, !dbg !265
  store i64 %90, ptr %14, align 8, !dbg !265
  br label %block_15, !dbg !265

block_18:                                         ; preds = %block_15
  br label %block_14, !dbg !265

block_13:                                         ; preds = %block_8
  br label %block_14, !dbg !265

block_14:                                         ; preds = %block_13, %block_18
  br label %block_1, !dbg !265

block_22:                                         ; preds = %block_0
  %91 = load ptr, ptr %2, align 8, !dbg !266
  %92 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !266
  %93 = getelementptr inbounds %init.StructType, ptr %92, i32 0, i32 1, !dbg !266
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %18, ptr align 8 %93, i64 16, i1 false), !dbg !266
  call void @io.push_string(ptr %91, ptr %18), !dbg !266
  br label %block_1, !dbg !266

block_23:                                         ; preds = %block_0
  %94 = load ptr, ptr %2, align 8, !dbg !267
  %95 = alloca %string, align 8, !dbg !267
  %String11 = getelementptr inbounds %string, ptr %95, i32 0, i32 0, !dbg !267
  %Size12 = getelementptr inbounds %string, ptr %95, i32 0, i32 1, !dbg !267
  store ptr @6, ptr %String11, align 8, !dbg !267
  store i64 1, ptr %Size12, align 8, !dbg !267
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %19, ptr align 8 %95, i64 16, i1 false), !dbg !267
  call void @io.push_string(ptr %94, ptr %19), !dbg !267
  %96 = load ptr, ptr %2, align 8, !dbg !268
  %97 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !268
  %98 = getelementptr inbounds %init.PointerType, ptr %97, i32 0, i32 0, !dbg !268
  %99 = load i64, ptr %98, align 8, !dbg !268
  %100 = load ptr, ptr getelementptr inbounds (%slice.5, ptr @init.type_table, i32 0, i32 1), align 8, !dbg !268
  %101 = getelementptr %init.TypeInfo, ptr %100, i64 %99, !dbg !268
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %101, i64 48, i1 false), !dbg !268
  call void @io.print_typetype(ptr %96, ptr %20), !dbg !268
  br label %block_1, !dbg !268

block_24:                                         ; preds = %block_0
  %102 = load ptr, ptr %2, align 8, !dbg !269
  %103 = alloca %string, align 8, !dbg !269
  %String13 = getelementptr inbounds %string, ptr %103, i32 0, i32 0, !dbg !269
  %Size14 = getelementptr inbounds %string, ptr %103, i32 0, i32 1, !dbg !269
  store ptr @7, ptr %String13, align 8, !dbg !269
  store i64 3, ptr %Size14, align 8, !dbg !269
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %103, i64 16, i1 false), !dbg !269
  call void @io.push_string(ptr %102, ptr %21), !dbg !269
  %104 = load ptr, ptr %2, align 8, !dbg !270
  %105 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !270
  %106 = getelementptr inbounds %init.ArrayType, ptr %105, i32 0, i32 0, !dbg !270
  %107 = load i64, ptr %106, align 8, !dbg !270
  %108 = load ptr, ptr getelementptr inbounds (%slice.5, ptr @init.type_table, i32 0, i32 1), align 8, !dbg !270
  %109 = getelementptr %init.TypeInfo, ptr %108, i64 %107, !dbg !270
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %22, ptr align 8 %109, i64 48, i1 false), !dbg !270
  call void @io.print_typetype(ptr %104, ptr %22), !dbg !270
  br label %block_1, !dbg !270

block_25:                                         ; preds = %block_0
  %110 = load ptr, ptr %2, align 8, !dbg !271
  %111 = alloca %string, align 8, !dbg !271
  %String15 = getelementptr inbounds %string, ptr %111, i32 0, i32 0, !dbg !271
  %Size16 = getelementptr inbounds %string, ptr %111, i32 0, i32 1, !dbg !271
  store ptr @8, ptr %String15, align 8, !dbg !271
  store i64 2, ptr %Size16, align 8, !dbg !271
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %23, ptr align 8 %111, i64 16, i1 false), !dbg !271
  call void @io.push_string(ptr %110, ptr %23), !dbg !271
  %112 = load ptr, ptr %2, align 8, !dbg !272
  %113 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !272
  %114 = getelementptr inbounds %init.SliceType, ptr %113, i32 0, i32 0, !dbg !272
  %115 = load i64, ptr %114, align 8, !dbg !272
  %116 = load ptr, ptr getelementptr inbounds (%slice.5, ptr @init.type_table, i32 0, i32 1), align 8, !dbg !272
  %117 = getelementptr %init.TypeInfo, ptr %116, i64 %115, !dbg !272
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %24, ptr align 8 %117, i64 48, i1 false), !dbg !272
  call void @io.print_typetype(ptr %112, ptr %24), !dbg !272
  br label %block_1, !dbg !272

block_26:                                         ; preds = %block_0
  %118 = load ptr, ptr %2, align 8, !dbg !273
  %119 = alloca %string, align 8, !dbg !273
  %String17 = getelementptr inbounds %string, ptr %119, i32 0, i32 0, !dbg !273
  %Size18 = getelementptr inbounds %string, ptr %119, i32 0, i32 1, !dbg !273
  store ptr @9, ptr %String17, align 8, !dbg !273
  store i64 2, ptr %Size18, align 8, !dbg !273
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %25, ptr align 8 %119, i64 16, i1 false), !dbg !273
  call void @io.push_string(ptr %118, ptr %25), !dbg !273
  br label %block_1, !dbg !273

block_27:                                         ; preds = %block_0
  %120 = load ptr, ptr %2, align 8, !dbg !274
  %121 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !274
  %122 = getelementptr inbounds %init.EnumType, ptr %121, i32 0, i32 0, !dbg !274
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %26, ptr align 8 %122, i64 16, i1 false), !dbg !274
  call void @io.push_string(ptr %120, ptr %26), !dbg !274
  br label %block_1, !dbg !274

block_28:                                         ; preds = %block_0
  %123 = load ptr, ptr %2, align 8, !dbg !275
  %124 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !275
  %125 = getelementptr inbounds %init.GenericType, ptr %124, i32 0, i32 0, !dbg !275
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %27, ptr align 8 %125, i64 16, i1 false), !dbg !275
  call void @io.push_string(ptr %123, ptr %27), !dbg !275
  br label %block_1, !dbg !275

block_1:                                          ; preds = %block_28, %block_27, %block_26, %block_25, %block_24, %block_23, %block_22, %block_14, %block_3, %block_2, %block_0
  ret void, !dbg !276
}

define void @io.print_type(ptr %0, ptr %1) !dbg !277 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca %init.Arg, align 8
  %4 = alloca %init.TypeInfo, align 8
  %5 = alloca %init.BasicType, align 8
  %6 = alloca %string, align 8
  %7 = alloca %string, align 8
  %8 = alloca %string, align 8
  %9 = alloca %string, align 8
  %10 = alloca %string, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca float, align 4
  %22 = alloca double, align 8
  %23 = alloca i64, align 8
  %24 = alloca %init.TypeInfo, align 8
  %25 = alloca %init.TypeInfo, align 8
  %26 = alloca %init.StructType, align 8
  %27 = alloca %string, align 8
  %28 = alloca %string, align 8
  %29 = alloca i64, align 8
  %30 = alloca %init.StructMember, align 8
  %31 = alloca %string, align 8
  %32 = alloca %string, align 8
  %33 = alloca ptr, align 8
  %34 = alloca %init.StructType, align 8
  %35 = alloca i64, align 8
  %36 = alloca %init.Arg, align 8
  %37 = alloca %init.Arg, align 8
  %38 = alloca %init.Arg, align 8
  %39 = alloca %string, align 8
  %40 = alloca %string, align 8
  %41 = alloca %init.EnumType, align 8
  %42 = alloca i64, align 8
  %43 = alloca i64, align 8
  %44 = alloca i64, align 8
  %45 = alloca %string, align 8
  store ptr %0, ptr %2, align 8, !dbg !284
  call void @llvm.dbg.value(metadata ptr %2, metadata !285, metadata !DIExpression()), !dbg !284
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !284
  call void @llvm.dbg.value(metadata ptr %3, metadata !286, metadata !DIExpression()), !dbg !284
  %46 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 0, !dbg !287
  %47 = load i64, ptr %46, align 8, !dbg !287
  %48 = load ptr, ptr getelementptr inbounds (%slice.5, ptr @init.type_table, i32 0, i32 1), align 8, !dbg !287
  %49 = getelementptr %init.TypeInfo, ptr %48, i64 %47, !dbg !287
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %49, i64 48, i1 false), !dbg !287
  call void @llvm.dbg.declare(metadata ptr %4, metadata !288, metadata !DIExpression()), !dbg !287
  %50 = getelementptr inbounds %init.TypeInfo, ptr %4, i32 0, i32 0, !dbg !289
  %51 = load i64, ptr %50, align 8, !dbg !289
  switch i64 %51, label %block_1 [
    i64 0, label %block_2
    i64 1, label %block_3
    i64 2, label %block_52
    i64 3, label %block_53
    i64 4, label %block_61
    i64 5, label %block_62
    i64 6, label %block_63
    i64 7, label %block_64
    i64 8, label %block_65
    i64 9, label %block_74
  ], !dbg !289

block_2:                                          ; preds = %block_0
  br label %block_1, !dbg !289

block_3:                                          ; preds = %block_0
  %52 = getelementptr inbounds %init.TypeInfo, ptr %4, i32 0, i32 1, !dbg !290
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %52, i64 32, i1 false), !dbg !290
  call void @llvm.dbg.declare(metadata ptr %5, metadata !291, metadata !DIExpression()), !dbg !290
  %53 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !292
  %54 = load i64, ptr %53, align 8, !dbg !292
  %55 = icmp eq i64 %54, 0, !dbg !292
  br i1 %55, label %block_4, label %block_5, !dbg !292

block_4:                                          ; preds = %block_3
  %56 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !293
  %57 = load ptr, ptr %56, align 8, !dbg !293
  %58 = load i1, ptr %57, align 1, !dbg !293
  br i1 %58, label %block_7, label %block_8, !dbg !293

block_7:                                          ; preds = %block_4
  %59 = load ptr, ptr %2, align 8, !dbg !294
  %60 = alloca %string, align 8, !dbg !294
  %String = getelementptr inbounds %string, ptr %60, i32 0, i32 0, !dbg !294
  %Size = getelementptr inbounds %string, ptr %60, i32 0, i32 1, !dbg !294
  store ptr @10, ptr %String, align 8, !dbg !294
  store i64 4, ptr %Size, align 8, !dbg !294
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %60, i64 16, i1 false), !dbg !294
  call void @io.push_string(ptr %59, ptr %6), !dbg !294
  br label %block_9, !dbg !294

block_8:                                          ; preds = %block_4
  %61 = load ptr, ptr %2, align 8, !dbg !295
  %62 = alloca %string, align 8, !dbg !295
  %String1 = getelementptr inbounds %string, ptr %62, i32 0, i32 0, !dbg !295
  %Size2 = getelementptr inbounds %string, ptr %62, i32 0, i32 1, !dbg !295
  store ptr @11, ptr %String1, align 8, !dbg !295
  store i64 5, ptr %Size2, align 8, !dbg !295
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %62, i64 16, i1 false), !dbg !295
  call void @io.push_string(ptr %61, ptr %7), !dbg !295
  br label %block_9, !dbg !295

block_9:                                          ; preds = %block_8, %block_7
  br label %block_6, !dbg !295

block_5:                                          ; preds = %block_3
  %63 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !296
  %64 = load i64, ptr %63, align 8, !dbg !296
  %65 = icmp eq i64 %64, 1, !dbg !296
  br i1 %65, label %block_10, label %block_11, !dbg !296

block_10:                                         ; preds = %block_5
  %66 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !297
  %67 = load ptr, ptr %66, align 8, !dbg !297
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %67, i64 16, i1 false), !dbg !297
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %8, i64 16, i1 false), !dbg !297
  call void @llvm.dbg.declare(metadata ptr %9, metadata !298, metadata !DIExpression()), !dbg !297
  %68 = load ptr, ptr %2, align 8, !dbg !299
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %10, ptr align 8 %9, i64 16, i1 false), !dbg !299
  call void @io.push_string(ptr %68, ptr %10), !dbg !299
  br label %block_12, !dbg !299

block_11:                                         ; preds = %block_5
  %69 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !300
  %70 = load i64, ptr %69, align 8, !dbg !300
  %71 = icmp eq i64 %70, 2, !dbg !300
  br i1 %71, label %block_13, label %block_14, !dbg !300

block_13:                                         ; preds = %block_11
  %72 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !301
  %73 = load ptr, ptr %72, align 8, !dbg !301
  %74 = load i8, ptr %73, align 1, !dbg !301
  %75 = zext i8 %74 to i64, !dbg !301
  store i64 %75, ptr %11, align 8, !dbg !301
  call void @llvm.dbg.declare(metadata ptr %11, metadata !302, metadata !DIExpression()), !dbg !301
  %76 = load ptr, ptr %2, align 8, !dbg !303
  %77 = load i64, ptr %11, align 8, !dbg !303
  call void @io.format_uint(ptr %76, i64 %77), !dbg !303
  br label %block_15, !dbg !303

block_14:                                         ; preds = %block_11
  %78 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !304
  %79 = load i64, ptr %78, align 8, !dbg !304
  %80 = icmp eq i64 %79, 3, !dbg !304
  br i1 %80, label %block_16, label %block_17, !dbg !304

block_16:                                         ; preds = %block_14
  %81 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !305
  %82 = load ptr, ptr %81, align 8, !dbg !305
  %83 = load i16, ptr %82, align 2, !dbg !305
  %84 = zext i16 %83 to i64, !dbg !305
  store i64 %84, ptr %12, align 8, !dbg !305
  call void @llvm.dbg.declare(metadata ptr %12, metadata !306, metadata !DIExpression()), !dbg !305
  %85 = load ptr, ptr %2, align 8, !dbg !307
  %86 = load i64, ptr %12, align 8, !dbg !307
  call void @io.format_uint(ptr %85, i64 %86), !dbg !307
  br label %block_18, !dbg !307

block_17:                                         ; preds = %block_14
  %87 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !308
  %88 = load i64, ptr %87, align 8, !dbg !308
  %89 = icmp eq i64 %88, 4, !dbg !308
  br i1 %89, label %block_19, label %block_20, !dbg !308

block_19:                                         ; preds = %block_17
  %90 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !309
  %91 = load ptr, ptr %90, align 8, !dbg !309
  %92 = load i32, ptr %91, align 4, !dbg !309
  %93 = zext i32 %92 to i64, !dbg !309
  store i64 %93, ptr %13, align 8, !dbg !309
  call void @llvm.dbg.declare(metadata ptr %13, metadata !310, metadata !DIExpression()), !dbg !309
  %94 = load ptr, ptr %2, align 8, !dbg !311
  %95 = load i64, ptr %13, align 8, !dbg !311
  call void @io.format_uint(ptr %94, i64 %95), !dbg !311
  br label %block_21, !dbg !311

block_20:                                         ; preds = %block_17
  %96 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !312
  %97 = load i64, ptr %96, align 8, !dbg !312
  %98 = icmp eq i64 %97, 5, !dbg !312
  br i1 %98, label %block_22, label %block_23, !dbg !312

block_22:                                         ; preds = %block_20
  %99 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !313
  %100 = load ptr, ptr %99, align 8, !dbg !313
  %101 = load i64, ptr %100, align 8, !dbg !313
  store i64 %101, ptr %14, align 8, !dbg !313
  call void @llvm.dbg.declare(metadata ptr %14, metadata !314, metadata !DIExpression()), !dbg !313
  %102 = load ptr, ptr %2, align 8, !dbg !315
  %103 = load i64, ptr %14, align 8, !dbg !315
  call void @io.format_uint(ptr %102, i64 %103), !dbg !315
  br label %block_24, !dbg !315

block_23:                                         ; preds = %block_20
  %104 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !316
  %105 = load i64, ptr %104, align 8, !dbg !316
  %106 = icmp eq i64 %105, 6, !dbg !316
  br i1 %106, label %block_25, label %block_26, !dbg !316

block_25:                                         ; preds = %block_23
  %107 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !317
  %108 = load ptr, ptr %107, align 8, !dbg !317
  %109 = load i8, ptr %108, align 1, !dbg !317
  %110 = sext i8 %109 to i64, !dbg !317
  store i64 %110, ptr %15, align 8, !dbg !317
  call void @llvm.dbg.declare(metadata ptr %15, metadata !318, metadata !DIExpression()), !dbg !317
  %111 = load ptr, ptr %2, align 8, !dbg !319
  %112 = load i64, ptr %15, align 8, !dbg !319
  call void @io.format_int(ptr %111, i64 %112), !dbg !319
  br label %block_27, !dbg !319

block_26:                                         ; preds = %block_23
  %113 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !320
  %114 = load i64, ptr %113, align 8, !dbg !320
  %115 = icmp eq i64 %114, 7, !dbg !320
  br i1 %115, label %block_28, label %block_29, !dbg !320

block_28:                                         ; preds = %block_26
  %116 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !321
  %117 = load ptr, ptr %116, align 8, !dbg !321
  %118 = load i16, ptr %117, align 2, !dbg !321
  %119 = sext i16 %118 to i64, !dbg !321
  store i64 %119, ptr %16, align 8, !dbg !321
  call void @llvm.dbg.declare(metadata ptr %16, metadata !322, metadata !DIExpression()), !dbg !321
  %120 = load ptr, ptr %2, align 8, !dbg !323
  %121 = load i64, ptr %16, align 8, !dbg !323
  call void @io.format_int(ptr %120, i64 %121), !dbg !323
  br label %block_30, !dbg !323

block_29:                                         ; preds = %block_26
  %122 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !324
  %123 = load i64, ptr %122, align 8, !dbg !324
  %124 = icmp eq i64 %123, 8, !dbg !324
  br i1 %124, label %block_31, label %block_32, !dbg !324

block_31:                                         ; preds = %block_29
  %125 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !325
  %126 = load ptr, ptr %125, align 8, !dbg !325
  %127 = load i32, ptr %126, align 4, !dbg !325
  %128 = sext i32 %127 to i64, !dbg !325
  store i64 %128, ptr %17, align 8, !dbg !325
  call void @llvm.dbg.declare(metadata ptr %17, metadata !326, metadata !DIExpression()), !dbg !325
  %129 = load ptr, ptr %2, align 8, !dbg !327
  %130 = load i64, ptr %17, align 8, !dbg !327
  call void @io.format_int(ptr %129, i64 %130), !dbg !327
  br label %block_33, !dbg !327

block_32:                                         ; preds = %block_29
  %131 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !328
  %132 = load i64, ptr %131, align 8, !dbg !328
  %133 = icmp eq i64 %132, 9, !dbg !328
  br i1 %133, label %block_34, label %block_35, !dbg !328

block_34:                                         ; preds = %block_32
  %134 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !329
  %135 = load ptr, ptr %134, align 8, !dbg !329
  %136 = load i64, ptr %135, align 8, !dbg !329
  store i64 %136, ptr %18, align 8, !dbg !329
  call void @llvm.dbg.declare(metadata ptr %18, metadata !330, metadata !DIExpression()), !dbg !329
  %137 = load ptr, ptr %2, align 8, !dbg !331
  %138 = load i64, ptr %18, align 8, !dbg !331
  call void @io.format_int(ptr %137, i64 %138), !dbg !331
  br label %block_36, !dbg !331

block_35:                                         ; preds = %block_32
  %139 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !332
  %140 = load i64, ptr %139, align 8, !dbg !332
  %141 = icmp eq i64 %140, 14, !dbg !332
  br i1 %141, label %block_37, label %block_38, !dbg !332

block_37:                                         ; preds = %block_35
  %142 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !333
  %143 = load ptr, ptr %142, align 8, !dbg !333
  %144 = load i64, ptr %143, align 8, !dbg !333
  store i64 %144, ptr %19, align 8, !dbg !333
  call void @llvm.dbg.declare(metadata ptr %19, metadata !334, metadata !DIExpression()), !dbg !333
  %145 = load ptr, ptr %2, align 8, !dbg !335
  %146 = load i64, ptr %19, align 8, !dbg !335
  call void @io.format_int(ptr %145, i64 %146), !dbg !335
  br label %block_39, !dbg !335

block_38:                                         ; preds = %block_35
  %147 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !336
  %148 = load i64, ptr %147, align 8, !dbg !336
  %149 = icmp eq i64 %148, 15, !dbg !336
  br i1 %149, label %block_40, label %block_41, !dbg !336

block_40:                                         ; preds = %block_38
  %150 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !337
  %151 = load ptr, ptr %150, align 8, !dbg !337
  %152 = load i64, ptr %151, align 8, !dbg !337
  store i64 %152, ptr %20, align 8, !dbg !337
  call void @llvm.dbg.declare(metadata ptr %20, metadata !338, metadata !DIExpression()), !dbg !337
  %153 = load ptr, ptr %2, align 8, !dbg !339
  %154 = load i64, ptr %20, align 8, !dbg !339
  call void @io.format_uint(ptr %153, i64 %154), !dbg !339
  br label %block_42, !dbg !339

block_41:                                         ; preds = %block_38
  %155 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !340
  %156 = load i64, ptr %155, align 8, !dbg !340
  %157 = icmp eq i64 %156, 10, !dbg !340
  br i1 %157, label %block_43, label %block_44, !dbg !340

block_43:                                         ; preds = %block_41
  %158 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !341
  %159 = load ptr, ptr %158, align 8, !dbg !341
  %160 = load float, ptr %159, align 4, !dbg !341
  store float %160, ptr %21, align 4, !dbg !341
  call void @llvm.dbg.declare(metadata ptr %21, metadata !342, metadata !DIExpression()), !dbg !341
  %161 = load ptr, ptr %2, align 8, !dbg !344
  %162 = load float, ptr %21, align 4, !dbg !344
  call void @"io.format_float:(type,*[]u32,f32,i32)->void"(i64 10, ptr %161, float %162, i32 100), !dbg !344
  br label %block_45, !dbg !344

block_44:                                         ; preds = %block_41
  %163 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !345
  %164 = load i64, ptr %163, align 8, !dbg !345
  %165 = icmp eq i64 %164, 11, !dbg !345
  br i1 %165, label %block_46, label %block_47, !dbg !345

block_46:                                         ; preds = %block_44
  %166 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !346
  %167 = load ptr, ptr %166, align 8, !dbg !346
  %168 = load double, ptr %167, align 8, !dbg !346
  store double %168, ptr %22, align 8, !dbg !346
  call void @llvm.dbg.declare(metadata ptr %22, metadata !347, metadata !DIExpression()), !dbg !346
  %169 = load ptr, ptr %2, align 8, !dbg !349
  %170 = load double, ptr %22, align 8, !dbg !349
  call void @"io.format_float:(type,*[]u32,f64,i32)->void"(i64 11, ptr %169, double %170, i32 100), !dbg !349
  br label %block_48, !dbg !349

block_47:                                         ; preds = %block_44
  %171 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !350
  %172 = load i64, ptr %171, align 8, !dbg !350
  %173 = icmp eq i64 %172, 16, !dbg !350
  br i1 %173, label %block_49, label %block_50, !dbg !350

block_49:                                         ; preds = %block_47
  %174 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !351
  %175 = load ptr, ptr %174, align 8, !dbg !351
  %176 = load i64, ptr %175, align 8, !dbg !351
  store i64 %176, ptr %23, align 8, !dbg !351
  call void @llvm.dbg.declare(metadata ptr %23, metadata !352, metadata !DIExpression()), !dbg !351
  %177 = load i64, ptr %23, align 8, !dbg !353
  %178 = load ptr, ptr getelementptr inbounds (%slice.5, ptr @init.type_table, i32 0, i32 1), align 8, !dbg !353
  %179 = getelementptr %init.TypeInfo, ptr %178, i64 %177, !dbg !353
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %24, ptr align 8 %179, i64 48, i1 false), !dbg !353
  call void @llvm.dbg.declare(metadata ptr %24, metadata !354, metadata !DIExpression()), !dbg !353
  %180 = load ptr, ptr %2, align 8, !dbg !355
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %25, ptr align 8 %24, i64 48, i1 false), !dbg !355
  call void @io.print_typetype(ptr %180, ptr %25), !dbg !355
  br label %block_51, !dbg !355

block_50:                                         ; preds = %block_47
  %181 = load ptr, ptr %2, align 8, !dbg !356
  call void @"array.add:(*[]u32,u32)->void"(ptr %181, i32 37), !dbg !356
  br label %block_51, !dbg !356

block_51:                                         ; preds = %block_50, %block_49
  br label %block_48, !dbg !356

block_48:                                         ; preds = %block_51, %block_46
  br label %block_45, !dbg !356

block_45:                                         ; preds = %block_48, %block_43
  br label %block_42, !dbg !356

block_42:                                         ; preds = %block_45, %block_40
  br label %block_39, !dbg !356

block_39:                                         ; preds = %block_42, %block_37
  br label %block_36, !dbg !356

block_36:                                         ; preds = %block_39, %block_34
  br label %block_33, !dbg !356

block_33:                                         ; preds = %block_36, %block_31
  br label %block_30, !dbg !356

block_30:                                         ; preds = %block_33, %block_28
  br label %block_27, !dbg !356

block_27:                                         ; preds = %block_30, %block_25
  br label %block_24, !dbg !356

block_24:                                         ; preds = %block_27, %block_22
  br label %block_21, !dbg !356

block_21:                                         ; preds = %block_24, %block_19
  br label %block_18, !dbg !356

block_18:                                         ; preds = %block_21, %block_16
  br label %block_15, !dbg !356

block_15:                                         ; preds = %block_18, %block_13
  br label %block_12, !dbg !356

block_12:                                         ; preds = %block_15, %block_10
  br label %block_6, !dbg !356

block_6:                                          ; preds = %block_12, %block_9
  br label %block_1, !dbg !356

block_52:                                         ; preds = %block_0
  br label %block_1, !dbg !356

block_53:                                         ; preds = %block_0
  %182 = getelementptr inbounds %init.TypeInfo, ptr %4, i32 0, i32 1, !dbg !357
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %26, ptr align 8 %182, i64 40, i1 false), !dbg !357
  call void @llvm.dbg.declare(metadata ptr %26, metadata !358, metadata !DIExpression()), !dbg !357
  %183 = load ptr, ptr %2, align 8, !dbg !359
  %184 = getelementptr inbounds %init.StructType, ptr %26, i32 0, i32 1, !dbg !359
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %27, ptr align 8 %184, i64 16, i1 false), !dbg !359
  call void @io.push_string(ptr %183, ptr %27), !dbg !359
  %185 = load ptr, ptr %2, align 8, !dbg !360
  %186 = alloca %string, align 8, !dbg !360
  %String3 = getelementptr inbounds %string, ptr %186, i32 0, i32 0, !dbg !360
  %Size4 = getelementptr inbounds %string, ptr %186, i32 0, i32 1, !dbg !360
  store ptr @12, ptr %String3, align 8, !dbg !360
  store i64 3, ptr %Size4, align 8, !dbg !360
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %28, ptr align 8 %186, i64 16, i1 false), !dbg !360
  call void @io.push_string(ptr %185, ptr %28), !dbg !360
  %187 = getelementptr inbounds %init.StructType, ptr %26, i32 0, i32 0, !dbg !361
  %188 = getelementptr inbounds %slice, ptr %187, i32 0, i32 0, !dbg !361
  %189 = load i64, ptr %188, align 8, !dbg !361
  store i64 0, ptr %29, align 8, !dbg !361
  br label %block_54, !dbg !361

block_54:                                         ; preds = %block_56, %block_53
  %190 = load i64, ptr %29, align 8, !dbg !361
  %191 = icmp ult i64 %190, %189, !dbg !361
  br i1 %191, label %block_55, label %block_57, !dbg !361

block_55:                                         ; preds = %block_54
  call void @llvm.dbg.declare(metadata ptr %29, metadata !362, metadata !DIExpression()), !dbg !361
  %192 = getelementptr inbounds %init.StructType, ptr %26, i32 0, i32 0, !dbg !363
  %193 = load i64, ptr %29, align 8, !dbg !363
  %194 = getelementptr inbounds %slice, ptr %192, i32 0, i32 1, !dbg !363
  %195 = load ptr, ptr %194, align 8, !dbg !363
  %196 = getelementptr %init.StructMember, ptr %195, i64 %193, !dbg !363
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %30, ptr align 8 %196, i64 24, i1 false), !dbg !363
  call void @llvm.dbg.declare(metadata ptr %30, metadata !364, metadata !DIExpression()), !dbg !363
  %197 = load ptr, ptr %2, align 8, !dbg !365
  %198 = getelementptr inbounds %init.StructMember, ptr %30, i32 0, i32 0, !dbg !365
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %31, ptr align 8 %198, i64 16, i1 false), !dbg !365
  call void @io.push_string(ptr %197, ptr %31), !dbg !365
  %199 = load ptr, ptr %2, align 8, !dbg !366
  %200 = alloca %string, align 8, !dbg !366
  %String5 = getelementptr inbounds %string, ptr %200, i32 0, i32 0, !dbg !366
  %Size6 = getelementptr inbounds %string, ptr %200, i32 0, i32 1, !dbg !366
  store ptr @13, ptr %String5, align 8, !dbg !366
  store i64 3, ptr %Size6, align 8, !dbg !366
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %32, ptr align 8 %200, i64 16, i1 false), !dbg !366
  call void @io.push_string(ptr %199, ptr %32), !dbg !366
  %201 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !367
  %202 = load ptr, ptr %201, align 8, !dbg !367
  store ptr %202, ptr %33, align 8, !dbg !367
  call void @llvm.dbg.declare(metadata ptr %33, metadata !368, metadata !DIExpression()), !dbg !367
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %34, ptr align 8 %26, i64 40, i1 false), !dbg !369
  %203 = load i64, ptr %29, align 8, !dbg !369
  %204 = call i64 @init.get_struct_member_offset(ptr %34, i64 %203), !dbg !369
  store i64 %204, ptr %35, align 8, !dbg !369
  call void @llvm.dbg.declare(metadata ptr %35, metadata !370, metadata !DIExpression()), !dbg !369
  %205 = getelementptr inbounds %init.StructMember, ptr %30, i32 0, i32 1, !dbg !371
  %206 = load i64, ptr %205, align 8, !dbg !371
  %207 = getelementptr inbounds %init.Arg, ptr %36, i32 0, i32 0, !dbg !371
  store i64 %206, ptr %207, align 8, !dbg !371
  %208 = load ptr, ptr %33, align 8, !dbg !371
  %209 = load i64, ptr %35, align 8, !dbg !371
  %210 = getelementptr i8, ptr %208, i64 %209, !dbg !371
  %211 = getelementptr inbounds %init.Arg, ptr %36, i32 0, i32 1, !dbg !371
  store ptr %210, ptr %211, align 8, !dbg !371
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %37, ptr align 8 %36, i64 16, i1 false), !dbg !371
  call void @llvm.dbg.declare(metadata ptr %37, metadata !372, metadata !DIExpression()), !dbg !371
  %212 = getelementptr inbounds %init.Arg, ptr %37, i32 0, i32 0, !dbg !373
  %213 = getelementptr inbounds %init.StructMember, ptr %30, i32 0, i32 1, !dbg !373
  %214 = load i64, ptr %213, align 8, !dbg !373
  store i64 %214, ptr %212, align 8, !dbg !373
  %215 = load ptr, ptr %2, align 8, !dbg !374
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %38, ptr align 8 %37, i64 16, i1 false), !dbg !374
  call void @io.print_type(ptr %215, ptr %38), !dbg !374
  %216 = load i64, ptr %29, align 8, !dbg !375
  %217 = add i64 %216, 1, !dbg !375
  %218 = getelementptr inbounds %init.StructType, ptr %26, i32 0, i32 0, !dbg !375
  %219 = getelementptr inbounds %slice, ptr %218, i32 0, i32 0, !dbg !375
  %220 = load i64, ptr %219, align 8, !dbg !375
  %221 = icmp ne i64 %217, %220, !dbg !375
  br i1 %221, label %block_58, label %block_59, !dbg !375

block_58:                                         ; preds = %block_55
  %222 = load ptr, ptr %2, align 8, !dbg !376
  %223 = alloca %string, align 8, !dbg !376
  %String7 = getelementptr inbounds %string, ptr %223, i32 0, i32 0, !dbg !376
  %Size8 = getelementptr inbounds %string, ptr %223, i32 0, i32 1, !dbg !376
  store ptr @14, ptr %String7, align 8, !dbg !376
  store i64 2, ptr %Size8, align 8, !dbg !376
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %39, ptr align 8 %223, i64 16, i1 false), !dbg !376
  call void @io.push_string(ptr %222, ptr %39), !dbg !376
  br label %block_60, !dbg !376

block_59:                                         ; preds = %block_55
  br label %block_60, !dbg !376

block_60:                                         ; preds = %block_59, %block_58
  br label %block_56, !dbg !376

block_56:                                         ; preds = %block_60
  %224 = load i64, ptr %29, align 8, !dbg !376
  %225 = add i64 %224, 1, !dbg !376
  store i64 %225, ptr %29, align 8, !dbg !376
  br label %block_54, !dbg !376

block_57:                                         ; preds = %block_54
  %226 = load ptr, ptr %2, align 8, !dbg !377
  %227 = alloca %string, align 8, !dbg !377
  %String9 = getelementptr inbounds %string, ptr %227, i32 0, i32 0, !dbg !377
  %Size10 = getelementptr inbounds %string, ptr %227, i32 0, i32 1, !dbg !377
  store ptr @15, ptr %String9, align 8, !dbg !377
  store i64 2, ptr %Size10, align 8, !dbg !377
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %40, ptr align 8 %227, i64 16, i1 false), !dbg !377
  call void @io.push_string(ptr %226, ptr %40), !dbg !377
  br label %block_1, !dbg !377

block_61:                                         ; preds = %block_0
  br label %block_1, !dbg !377

block_62:                                         ; preds = %block_0
  br label %block_1, !dbg !377

block_63:                                         ; preds = %block_0
  br label %block_1, !dbg !377

block_64:                                         ; preds = %block_0
  br label %block_1, !dbg !377

block_65:                                         ; preds = %block_0
  %228 = getelementptr inbounds %init.TypeInfo, ptr %4, i32 0, i32 1, !dbg !378
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %41, ptr align 8 %228, i64 40, i1 false), !dbg !378
  call void @llvm.dbg.declare(metadata ptr %41, metadata !379, metadata !DIExpression()), !dbg !378
  %229 = getelementptr inbounds %init.EnumType, ptr %41, i32 0, i32 2, !dbg !380
  %230 = load i64, ptr %229, align 8, !dbg !380
  %231 = call i64 @init.get_type_size(i64 %230), !dbg !380
  store i64 %231, ptr %42, align 8, !dbg !380
  call void @llvm.dbg.declare(metadata ptr %42, metadata !381, metadata !DIExpression()), !dbg !380
  %232 = load i64, ptr %42, align 8, !dbg !382
  switch i64 %232, label %block_66 [
    i64 1, label %block_67
    i64 2, label %block_68
    i64 4, label %block_69
    i64 8, label %block_70
  ], !dbg !382

block_67:                                         ; preds = %block_65
  %233 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !382
  %234 = load ptr, ptr %233, align 8, !dbg !382
  %235 = load i8, ptr %234, align 1, !dbg !382
  %236 = sext i8 %235 to i64, !dbg !382
  store i64 %236, ptr %43, align 8, !dbg !382
  br label %block_66, !dbg !382

block_68:                                         ; preds = %block_65
  %237 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !382
  %238 = load ptr, ptr %237, align 8, !dbg !382
  %239 = load i16, ptr %238, align 2, !dbg !382
  %240 = sext i16 %239 to i64, !dbg !382
  store i64 %240, ptr %43, align 8, !dbg !382
  br label %block_66, !dbg !382

block_69:                                         ; preds = %block_65
  %241 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !382
  %242 = load ptr, ptr %241, align 8, !dbg !382
  %243 = load i32, ptr %242, align 4, !dbg !382
  %244 = sext i32 %243 to i64, !dbg !382
  store i64 %244, ptr %43, align 8, !dbg !382
  br label %block_66, !dbg !382

block_70:                                         ; preds = %block_65
  %245 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !382
  %246 = load ptr, ptr %245, align 8, !dbg !382
  %247 = load i64, ptr %246, align 8, !dbg !382
  store i64 %247, ptr %43, align 8, !dbg !382
  br label %block_66, !dbg !382

block_66:                                         ; preds = %block_70, %block_69, %block_68, %block_67, %block_65
  %248 = load i64, ptr %43, align 8, !dbg !382
  store i64 %248, ptr %44, align 8, !dbg !382
  call void @llvm.dbg.declare(metadata ptr %44, metadata !383, metadata !DIExpression()), !dbg !382
  %249 = load i64, ptr %44, align 8, !dbg !384
  %250 = getelementptr inbounds %init.EnumType, ptr %41, i32 0, i32 1, !dbg !384
  %251 = getelementptr inbounds %slice.2, ptr %250, i32 0, i32 0, !dbg !384
  %252 = load i64, ptr %251, align 8, !dbg !384
  %253 = icmp slt i64 %249, %252, !dbg !384
  br i1 %253, label %block_71, label %block_72, !dbg !384

block_71:                                         ; preds = %block_66
  %254 = load ptr, ptr %2, align 8, !dbg !385
  %255 = getelementptr inbounds %init.EnumType, ptr %41, i32 0, i32 1, !dbg !385
  %256 = load i64, ptr %44, align 8, !dbg !385
  %257 = getelementptr inbounds %slice.2, ptr %255, i32 0, i32 1, !dbg !385
  %258 = load ptr, ptr %257, align 8, !dbg !385
  %259 = getelementptr %string, ptr %258, i64 %256, !dbg !385
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %45, ptr align 8 %259, i64 16, i1 false), !dbg !385
  call void @io.push_string(ptr %254, ptr %45), !dbg !385
  br label %block_73, !dbg !385

block_72:                                         ; preds = %block_66
  br label %block_73, !dbg !385

block_73:                                         ; preds = %block_72, %block_71
  br label %block_1, !dbg !385

block_74:                                         ; preds = %block_0
  br label %block_1, !dbg !385

block_1:                                          ; preds = %block_74, %block_73, %block_64, %block_63, %block_62, %block_61, %block_57, %block_52, %block_6, %block_2, %block_0
  ret void, !dbg !386
}

define void @io.builder_to_string(ptr %0, ptr %1) !dbg !387 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca %mem.Allocator, align 8
  %5 = alloca %mem.Allocator, align 8
  %6 = alloca %slice.6, align 8
  %7 = alloca %slice.6, align 8
  %8 = alloca i64, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  store ptr %1, ptr %2, align 8, !dbg !393
  call void @llvm.dbg.value(metadata ptr %2, metadata !394, metadata !DIExpression()), !dbg !393
  %12 = load ptr, ptr %2, align 8, !dbg !395
  store ptr %12, ptr %3, align 8, !dbg !395
  call void @llvm.dbg.declare(metadata ptr %3, metadata !396, metadata !DIExpression()), !dbg !395
  call void @mem.create_generic_allocator(ptr %4), !dbg !397
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %4, i64 24, i1 false), !dbg !397
  call void @llvm.dbg.declare(metadata ptr %5, metadata !398, metadata !DIExpression()), !dbg !397
  call void @"array.create:(type,*mem.Allocator)->[]u8"(ptr %6, i64 2, ptr %5), !dbg !412
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %6, i64 16, i1 false), !dbg !412
  call void @llvm.dbg.declare(metadata ptr %7, metadata !413, metadata !DIExpression()), !dbg !412
  %13 = load ptr, ptr %3, align 8, !dbg !414
  %14 = getelementptr inbounds %slice.3, ptr %13, i32 0, i32 0, !dbg !414
  %15 = load i64, ptr %14, align 8, !dbg !414
  store i64 0, ptr %8, align 8, !dbg !414
  br label %block_1, !dbg !414

block_1:                                          ; preds = %block_3, %block_0
  %16 = load i64, ptr %8, align 8, !dbg !414
  %17 = icmp ult i64 %16, %15, !dbg !414
  br i1 %17, label %block_2, label %block_4, !dbg !414

block_2:                                          ; preds = %block_1
  call void @llvm.dbg.declare(metadata ptr %8, metadata !415, metadata !DIExpression()), !dbg !414
  %18 = load ptr, ptr %3, align 8, !dbg !416
  %19 = getelementptr inbounds %slice.3, ptr %18, i32 0, i32 1, !dbg !416
  %20 = load ptr, ptr %19, align 8, !dbg !416
  %21 = load i64, ptr %8, align 8, !dbg !416
  %22 = getelementptr i32, ptr %20, i64 %21, !dbg !416
  store ptr %22, ptr %9, align 8, !dbg !416
  call void @llvm.dbg.declare(metadata ptr %9, metadata !417, metadata !DIExpression()), !dbg !416
  %23 = load ptr, ptr %9, align 8, !dbg !418
  %24 = getelementptr i8, ptr %23, i64 3, !dbg !418
  store ptr %24, ptr %9, align 8, !dbg !418
  br label %block_5, !dbg !419

block_5:                                          ; preds = %block_6, %block_2
  %25 = load ptr, ptr %9, align 8, !dbg !419
  %26 = load i8, ptr %25, align 1, !dbg !419
  %27 = icmp eq i8 %26, 0, !dbg !419
  br i1 %27, label %block_6, label %block_7, !dbg !419

block_6:                                          ; preds = %block_5
  %28 = load ptr, ptr %9, align 8, !dbg !420
  %29 = getelementptr i8, ptr %28, i64 -1, !dbg !420
  store ptr %29, ptr %9, align 8, !dbg !420
  br label %block_5, !dbg !420

block_7:                                          ; preds = %block_5
  %30 = load ptr, ptr %9, align 8, !dbg !421
  %31 = call i64 @str.get_codepoint_size(ptr %30), !dbg !421
  store i64 %31, ptr %10, align 8, !dbg !421
  call void @llvm.dbg.declare(metadata ptr %10, metadata !422, metadata !DIExpression()), !dbg !421
  %32 = load i64, ptr %10, align 8, !dbg !423
  store i64 0, ptr %11, align 8, !dbg !423
  br label %block_8, !dbg !423

block_8:                                          ; preds = %block_10, %block_7
  %33 = load i64, ptr %11, align 8, !dbg !423
  %34 = icmp ult i64 %33, %32, !dbg !423
  br i1 %34, label %block_9, label %block_11, !dbg !423

block_9:                                          ; preds = %block_8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !424, metadata !DIExpression()), !dbg !423
  %35 = load ptr, ptr %9, align 8, !dbg !425
  %36 = load i64, ptr %11, align 8, !dbg !425
  %37 = sub i64 0, %36, !dbg !425
  %38 = getelementptr i8, ptr %35, i64 %37, !dbg !425
  %39 = load i8, ptr %38, align 1, !dbg !425
  call void @"array.add:(*[]u8,u8)->void"(ptr %7, i8 %39), !dbg !425
  br label %block_10, !dbg !425

block_10:                                         ; preds = %block_9
  %40 = load i64, ptr %11, align 8, !dbg !425
  %41 = add i64 %40, 1, !dbg !425
  store i64 %41, ptr %11, align 8, !dbg !425
  br label %block_8, !dbg !425

block_11:                                         ; preds = %block_8
  br label %block_3, !dbg !425

block_3:                                          ; preds = %block_11
  %42 = load i64, ptr %8, align 8, !dbg !425
  %43 = add i64 %42, 1, !dbg !425
  store i64 %43, ptr %8, align 8, !dbg !425
  br label %block_1, !dbg !425

block_4:                                          ; preds = %block_1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %7, i64 16, i1 false), !dbg !426
  ret void, !dbg !426
}

define void @io.print_type_with_formatter(ptr %0, i32 %1, ptr %2) !dbg !427 {
block_0:
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca %init.Arg, align 8
  %6 = alloca %init.TypeInfo, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca %init.Arg, align 8
  store ptr %0, ptr %3, align 8, !dbg !430
  call void @llvm.dbg.value(metadata ptr %3, metadata !431, metadata !DIExpression()), !dbg !430
  store i32 %1, ptr %4, align 4, !dbg !430
  call void @llvm.dbg.value(metadata ptr %4, metadata !432, metadata !DIExpression()), !dbg !430
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %2, i64 16, i1 false), !dbg !430
  call void @llvm.dbg.value(metadata ptr %5, metadata !433, metadata !DIExpression()), !dbg !430
  %11 = getelementptr inbounds %init.Arg, ptr %5, i32 0, i32 0, !dbg !434
  %12 = load i64, ptr %11, align 8, !dbg !434
  %13 = load ptr, ptr getelementptr inbounds (%slice.5, ptr @init.type_table, i32 0, i32 1), align 8, !dbg !434
  %14 = getelementptr %init.TypeInfo, ptr %13, i64 %12, !dbg !434
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %14, i64 48, i1 false), !dbg !434
  call void @llvm.dbg.declare(metadata ptr %6, metadata !435, metadata !DIExpression()), !dbg !434
  %15 = load i32, ptr %4, align 4, !dbg !436
  %16 = icmp eq i32 %15, 115, !dbg !436
  %17 = getelementptr inbounds %init.TypeInfo, ptr %6, i32 0, i32 0, !dbg !436
  %18 = load i64, ptr %17, align 8, !dbg !436
  %19 = icmp eq i64 %18, 4, !dbg !436
  %20 = icmp ne i1 %16, false, !dbg !436
  %21 = icmp ne i1 %19, false, !dbg !436
  %22 = and i1 %20, %21, !dbg !436
  %23 = getelementptr inbounds %init.TypeInfo, ptr %6, i32 0, i32 1, !dbg !436
  %24 = getelementptr inbounds %init.PointerType, ptr %23, i32 0, i32 0, !dbg !436
  %25 = load i64, ptr %24, align 8, !dbg !436
  %26 = icmp eq i64 %25, 2, !dbg !436
  %27 = icmp ne i1 %22, false, !dbg !436
  %28 = icmp ne i1 %26, false, !dbg !436
  %29 = and i1 %27, %28, !dbg !436
  br i1 %29, label %block_1, label %block_2, !dbg !436

block_1:                                          ; preds = %block_0
  %30 = getelementptr inbounds %init.Arg, ptr %5, i32 0, i32 1, !dbg !437
  %31 = load ptr, ptr %30, align 8, !dbg !437
  %32 = load ptr, ptr %31, align 8, !dbg !437
  store ptr %32, ptr %7, align 8, !dbg !437
  call void @llvm.dbg.declare(metadata ptr %7, metadata !438, metadata !DIExpression()), !dbg !437
  store i64 0, ptr %8, align 8, !dbg !439
  call void @llvm.dbg.declare(metadata ptr %8, metadata !440, metadata !DIExpression()), !dbg !439
  br label %block_4, !dbg !439

block_4:                                          ; preds = %block_6, %block_1
  %33 = load ptr, ptr %7, align 8, !dbg !439
  %34 = load i64, ptr %8, align 8, !dbg !439
  %35 = getelementptr i8, ptr %33, i64 %34, !dbg !439
  %36 = load i8, ptr %35, align 1, !dbg !439
  %37 = zext i8 %36 to i32, !dbg !439
  %38 = icmp ne i32 %37, 0, !dbg !439
  br i1 %38, label %block_5, label %block_7, !dbg !439

block_5:                                          ; preds = %block_4
  %39 = load ptr, ptr %3, align 8, !dbg !441
  %40 = load ptr, ptr %7, align 8, !dbg !441
  %41 = load i64, ptr %8, align 8, !dbg !441
  %42 = getelementptr i8, ptr %40, i64 %41, !dbg !441
  %43 = load i8, ptr %42, align 1, !dbg !441
  %44 = zext i8 %43 to i32, !dbg !441
  call void @"array.add:(*[]u32,u32)->void"(ptr %39, i32 %44), !dbg !441
  br label %block_6, !dbg !441

block_6:                                          ; preds = %block_5
  %45 = load i64, ptr %8, align 8, !dbg !441
  %46 = add i64 %45, 1, !dbg !441
  store i64 %46, ptr %8, align 8, !dbg !441
  %47 = load i64, ptr %8, align 8, !dbg !441
  br label %block_4, !dbg !441

block_7:                                          ; preds = %block_4
  br label %block_3, !dbg !441

block_2:                                          ; preds = %block_0
  %48 = load i32, ptr %4, align 4, !dbg !442
  %49 = icmp eq i32 %48, 99, !dbg !442
  %50 = getelementptr inbounds %init.TypeInfo, ptr %6, i32 0, i32 0, !dbg !442
  %51 = load i64, ptr %50, align 8, !dbg !442
  %52 = icmp eq i64 %51, 1, !dbg !442
  %53 = icmp ne i1 %49, false, !dbg !442
  %54 = icmp ne i1 %52, false, !dbg !442
  %55 = and i1 %53, %54, !dbg !442
  %56 = getelementptr inbounds %init.TypeInfo, ptr %6, i32 0, i32 1, !dbg !442
  %57 = getelementptr inbounds %init.BasicType, ptr %56, i32 0, i32 0, !dbg !442
  %58 = load i64, ptr %57, align 8, !dbg !442
  %59 = icmp eq i64 %58, 2, !dbg !442
  %60 = getelementptr inbounds %init.TypeInfo, ptr %6, i32 0, i32 1, !dbg !442
  %61 = getelementptr inbounds %init.BasicType, ptr %60, i32 0, i32 0, !dbg !442
  %62 = load i64, ptr %61, align 8, !dbg !442
  %63 = icmp eq i64 %62, 4, !dbg !442
  %64 = icmp ne i1 %59, false, !dbg !442
  %65 = icmp ne i1 %63, false, !dbg !442
  %66 = or i1 %64, %65, !dbg !442
  %67 = icmp ne i1 %55, false, !dbg !442
  %68 = icmp ne i1 %66, false, !dbg !442
  %69 = and i1 %67, %68, !dbg !442
  br i1 %69, label %block_8, label %block_9, !dbg !442

block_8:                                          ; preds = %block_2
  store i32 0, ptr %9, align 4, !dbg !443
  call void @llvm.dbg.declare(metadata ptr %9, metadata !444, metadata !DIExpression()), !dbg !443
  %70 = getelementptr inbounds %init.TypeInfo, ptr %6, i32 0, i32 1, !dbg !445
  %71 = getelementptr inbounds %init.BasicType, ptr %70, i32 0, i32 0, !dbg !445
  %72 = load i64, ptr %71, align 8, !dbg !445
  %73 = icmp eq i64 %72, 2, !dbg !445
  br i1 %73, label %block_11, label %block_12, !dbg !445

block_11:                                         ; preds = %block_8
  %74 = getelementptr inbounds %init.Arg, ptr %5, i32 0, i32 1, !dbg !446
  %75 = load ptr, ptr %74, align 8, !dbg !446
  %76 = load i8, ptr %75, align 1, !dbg !446
  %77 = zext i8 %76 to i32, !dbg !446
  store i32 %77, ptr %9, align 4, !dbg !446
  br label %block_13, !dbg !446

block_12:                                         ; preds = %block_8
  %78 = getelementptr inbounds %init.TypeInfo, ptr %6, i32 0, i32 1, !dbg !447
  %79 = getelementptr inbounds %init.BasicType, ptr %78, i32 0, i32 0, !dbg !447
  %80 = load i64, ptr %79, align 8, !dbg !447
  %81 = icmp eq i64 %80, 4, !dbg !447
  br i1 %81, label %block_14, label %block_15, !dbg !447

block_14:                                         ; preds = %block_12
  %82 = getelementptr inbounds %init.Arg, ptr %5, i32 0, i32 1, !dbg !448
  %83 = load ptr, ptr %82, align 8, !dbg !448
  %84 = load i32, ptr %83, align 4, !dbg !448
  store i32 %84, ptr %9, align 4, !dbg !448
  br label %block_16, !dbg !448

block_15:                                         ; preds = %block_12
  br label %block_16, !dbg !448

block_16:                                         ; preds = %block_15, %block_14
  br label %block_13, !dbg !448

block_13:                                         ; preds = %block_16, %block_11
  %85 = load ptr, ptr %3, align 8, !dbg !449
  %86 = load i32, ptr %9, align 4, !dbg !449
  call void @"array.add:(*[]u32,u32)->void"(ptr %85, i32 %86), !dbg !449
  br label %block_10, !dbg !449

block_9:                                          ; preds = %block_2
  %87 = load ptr, ptr %3, align 8, !dbg !450
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %10, ptr align 8 %5, i64 16, i1 false), !dbg !450
  call void @io.print_type(ptr %87, ptr %10), !dbg !450
  %88 = load i32, ptr %4, align 4, !dbg !451
  %89 = icmp ne i32 %88, 0, !dbg !451
  br i1 %89, label %block_17, label %block_18, !dbg !451

block_17:                                         ; preds = %block_9
  %90 = load ptr, ptr %3, align 8, !dbg !452
  %91 = load i32, ptr %4, align 4, !dbg !452
  call void @"array.add:(*[]u32,u32)->void"(ptr %90, i32 %91), !dbg !452
  br label %block_19, !dbg !452

block_18:                                         ; preds = %block_9
  br label %block_19, !dbg !452

block_19:                                         ; preds = %block_18, %block_17
  br label %block_10, !dbg !452

block_10:                                         ; preds = %block_19, %block_13
  br label %block_3, !dbg !452

block_3:                                          ; preds = %block_10, %block_7
  ret void, !dbg !453
}

define void @io.__internal_print(ptr %0, ptr %1, ptr %2) !dbg !454 {
block_0:
  %3 = alloca %string, align 8
  %4 = alloca %slice.7, align 8
  %5 = alloca %mem.Allocator, align 8
  %6 = alloca %mem.Allocator, align 8
  %7 = alloca %slice.3, align 8
  %8 = alloca %slice.3, align 8
  %9 = alloca i64, align 8
  %10 = alloca i1, align 1
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca %init.Arg, align 8
  %15 = alloca %init.Arg, align 8
  %16 = alloca %init.Arg, align 8
  %17 = alloca %init.Arg, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !461
  call void @llvm.dbg.value(metadata ptr %3, metadata !462, metadata !DIExpression()), !dbg !461
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %2, i64 16, i1 false), !dbg !461
  call void @llvm.dbg.value(metadata ptr %4, metadata !463, metadata !DIExpression()), !dbg !461
  call void @mem.create_generic_allocator(ptr %5), !dbg !464
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %5, i64 24, i1 false), !dbg !464
  call void @llvm.dbg.declare(metadata ptr %6, metadata !465, metadata !DIExpression()), !dbg !464
  call void @"array.create:(type,*mem.Allocator)->[]u32"(ptr %7, i64 4, ptr %6), !dbg !466
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %7, i64 16, i1 false), !dbg !466
  call void @llvm.dbg.declare(metadata ptr %8, metadata !467, metadata !DIExpression()), !dbg !466
  store i64 0, ptr %9, align 8, !dbg !468
  call void @llvm.dbg.declare(metadata ptr %9, metadata !469, metadata !DIExpression()), !dbg !468
  store i1 false, ptr %10, align 1, !dbg !470
  call void @llvm.dbg.declare(metadata ptr %10, metadata !471, metadata !DIExpression()), !dbg !470
  %18 = getelementptr inbounds %string, ptr %3, i32 0, i32 1, !dbg !472
  %19 = load i64, ptr %18, align 8, !dbg !472
  %20 = getelementptr inbounds %string, ptr %3, i32 0, i32 0, !dbg !472
  %21 = load ptr, ptr %20, align 8, !dbg !472
  store ptr %21, ptr %11, align 8, !dbg !472
  store i64 0, ptr %12, align 8, !dbg !472
  br label %block_1, !dbg !472

block_1:                                          ; preds = %block_3, %block_0
  %22 = load i64, ptr %12, align 8, !dbg !472
  %23 = icmp ult i64 %22, %19, !dbg !472
  br i1 %23, label %block_2, label %block_4, !dbg !472

block_2:                                          ; preds = %block_1
  %24 = load ptr, ptr %11, align 8, !dbg !472
  %25 = call i32 @str.deref(ptr %24), !dbg !472
  store i32 %25, ptr %13, align 4, !dbg !472
  call void @llvm.dbg.declare(metadata ptr %13, metadata !473, metadata !DIExpression()), !dbg !472
  call void @llvm.dbg.declare(metadata ptr %12, metadata !474, metadata !DIExpression()), !dbg !472
  %26 = load i32, ptr %13, align 4, !dbg !475
  %27 = icmp eq i32 %26, 37, !dbg !475
  %28 = getelementptr inbounds %slice.7, ptr %4, i32 0, i32 0, !dbg !475
  %29 = load i64, ptr %28, align 8, !dbg !475
  %30 = load i64, ptr %9, align 8, !dbg !475
  %31 = icmp sgt i64 %29, %30, !dbg !475
  %32 = icmp ne i1 %27, false, !dbg !475
  %33 = icmp ne i1 %31, false, !dbg !475
  %34 = and i1 %32, %33, !dbg !475
  br i1 %34, label %block_5, label %block_6, !dbg !475

block_5:                                          ; preds = %block_2
  store i1 true, ptr %10, align 1, !dbg !476
  br label %block_7, !dbg !476

block_6:                                          ; preds = %block_2
  %35 = load i1, ptr %10, align 1, !dbg !477
  br i1 %35, label %block_8, label %block_9, !dbg !477

block_8:                                          ; preds = %block_6
  %36 = load i64, ptr %9, align 8, !dbg !478
  %37 = getelementptr inbounds %slice.7, ptr %4, i32 0, i32 1, !dbg !478
  %38 = load ptr, ptr %37, align 8, !dbg !478
  %39 = getelementptr %init.Arg, ptr %38, i64 %36, !dbg !478
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr align 8 %39, i64 16, i1 false), !dbg !478
  call void @llvm.dbg.declare(metadata ptr %14, metadata !479, metadata !DIExpression()), !dbg !478
  %40 = load i64, ptr %9, align 8, !dbg !480
  %41 = add i64 %40, 1, !dbg !480
  store i64 %41, ptr %9, align 8, !dbg !480
  %42 = load i32, ptr %13, align 4, !dbg !481
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %15, ptr align 8 %14, i64 16, i1 false), !dbg !481
  call void @io.print_type_with_formatter(ptr %8, i32 %42, ptr %15), !dbg !481
  store i1 false, ptr %10, align 1, !dbg !482
  br label %block_10, !dbg !482

block_9:                                          ; preds = %block_6
  %43 = load i32, ptr %13, align 4, !dbg !483
  call void @"array.add:(*[]u32,u32)->void"(ptr %8, i32 %43), !dbg !483
  br label %block_10, !dbg !483

block_10:                                         ; preds = %block_9, %block_8
  br label %block_7, !dbg !483

block_7:                                          ; preds = %block_10, %block_5
  br label %block_3, !dbg !483

block_3:                                          ; preds = %block_7
  %44 = load i64, ptr %12, align 8, !dbg !483
  %45 = add i64 %44, 1, !dbg !483
  store i64 %45, ptr %12, align 8, !dbg !483
  %46 = load ptr, ptr %11, align 8, !dbg !483
  %47 = call ptr @str.advance(ptr %46), !dbg !483
  store ptr %47, ptr %11, align 8, !dbg !483
  br label %block_1, !dbg !483

block_4:                                          ; preds = %block_1
  %48 = load i1, ptr %10, align 1, !dbg !484
  br i1 %48, label %block_11, label %block_12, !dbg !484

block_11:                                         ; preds = %block_4
  %49 = load i64, ptr %9, align 8, !dbg !485
  %50 = getelementptr inbounds %slice.7, ptr %4, i32 0, i32 1, !dbg !485
  %51 = load ptr, ptr %50, align 8, !dbg !485
  %52 = getelementptr %init.Arg, ptr %51, i64 %49, !dbg !485
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %52, i64 16, i1 false), !dbg !485
  call void @llvm.dbg.declare(metadata ptr %16, metadata !486, metadata !DIExpression()), !dbg !485
  %53 = load i64, ptr %9, align 8, !dbg !487
  %54 = add i64 %53, 1, !dbg !487
  store i64 %54, ptr %9, align 8, !dbg !487
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr align 8 %16, i64 16, i1 false), !dbg !488
  call void @io.print_type_with_formatter(ptr %8, i32 0, ptr %17), !dbg !488
  store i1 false, ptr %10, align 1, !dbg !489
  br label %block_13, !dbg !489

block_12:                                         ; preds = %block_4
  br label %block_13, !dbg !489

block_13:                                         ; preds = %block_12, %block_11
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %8, i64 16, i1 false), !dbg !490
  ret void, !dbg !490
}

define void @io.vsprint(ptr %0, ptr %1, ptr %2) !dbg !491 {
block_0:
  %3 = alloca %string, align 8
  %4 = alloca %slice.7, align 8
  %5 = alloca %slice.3, align 8
  %6 = alloca %string, align 8
  %7 = alloca %slice.3, align 8
  %8 = alloca %slice.6, align 8
  %9 = alloca %slice.6, align 8
  %10 = alloca %string, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !494
  call void @llvm.dbg.value(metadata ptr %3, metadata !495, metadata !DIExpression()), !dbg !494
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %2, i64 16, i1 false), !dbg !494
  call void @llvm.dbg.value(metadata ptr %4, metadata !496, metadata !DIExpression()), !dbg !494
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %3, i64 16, i1 false), !dbg !497
  call void @io.__internal_print(ptr %5, ptr %6, ptr %4), !dbg !497
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %5, i64 16, i1 false), !dbg !497
  call void @llvm.dbg.declare(metadata ptr %7, metadata !498, metadata !DIExpression()), !dbg !497
  call void @io.builder_to_string(ptr %8, ptr %7), !dbg !499
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %8, i64 16, i1 false), !dbg !499
  call void @llvm.dbg.declare(metadata ptr %9, metadata !500, metadata !DIExpression()), !dbg !499
  call void @"array.free:(*[]u32)->void"(ptr %7), !dbg !501
  %11 = getelementptr inbounds %slice.6, ptr %9, i32 0, i32 1, !dbg !502
  %12 = load ptr, ptr %11, align 8, !dbg !502
  %13 = getelementptr i8, ptr %12, i64 0, !dbg !502
  %14 = getelementptr inbounds %string, ptr %10, i32 0, i32 0, !dbg !502
  store ptr %13, ptr %14, align 8, !dbg !502
  %15 = getelementptr inbounds %slice.6, ptr %9, i32 0, i32 0, !dbg !502
  %16 = load i64, ptr %15, align 8, !dbg !502
  %17 = getelementptr inbounds %string, ptr %10, i32 0, i32 1, !dbg !502
  store i64 %16, ptr %17, align 8, !dbg !502
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %10, i64 16, i1 false), !dbg !502
  ret void, !dbg !502
}

define void @io.sprint(ptr %0, ptr %1, ptr %2) !dbg !503 {
block_0:
  %3 = alloca %string, align 8
  %4 = alloca %slice.7, align 8
  %5 = alloca %slice.3, align 8
  %6 = alloca %string, align 8
  %7 = alloca %slice.3, align 8
  %8 = alloca %slice.6, align 8
  %9 = alloca %slice.6, align 8
  %10 = alloca %string, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !506
  call void @llvm.dbg.value(metadata ptr %3, metadata !507, metadata !DIExpression()), !dbg !506
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %2, i64 16, i1 false), !dbg !506
  call void @llvm.dbg.value(metadata ptr %4, metadata !508, metadata !DIExpression()), !dbg !506
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %3, i64 16, i1 false), !dbg !509
  call void @io.__internal_print(ptr %5, ptr %6, ptr %4), !dbg !509
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %5, i64 16, i1 false), !dbg !509
  call void @llvm.dbg.declare(metadata ptr %7, metadata !510, metadata !DIExpression()), !dbg !509
  call void @io.builder_to_string(ptr %8, ptr %7), !dbg !511
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %8, i64 16, i1 false), !dbg !511
  call void @llvm.dbg.declare(metadata ptr %9, metadata !512, metadata !DIExpression()), !dbg !511
  call void @"array.free:(*[]u32)->void"(ptr %7), !dbg !513
  %11 = getelementptr inbounds %slice.6, ptr %9, i32 0, i32 1, !dbg !514
  %12 = load ptr, ptr %11, align 8, !dbg !514
  %13 = getelementptr i8, ptr %12, i64 0, !dbg !514
  %14 = getelementptr inbounds %string, ptr %10, i32 0, i32 0, !dbg !514
  store ptr %13, ptr %14, align 8, !dbg !514
  %15 = getelementptr inbounds %slice.6, ptr %9, i32 0, i32 0, !dbg !514
  %16 = load i64, ptr %15, align 8, !dbg !514
  %17 = getelementptr inbounds %string, ptr %10, i32 0, i32 1, !dbg !514
  store i64 %16, ptr %17, align 8, !dbg !514
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %10, i64 16, i1 false), !dbg !514
  ret void, !dbg !514
}

define void @io.print(ptr %0, ptr %1) !dbg !515 {
block_0:
  %2 = alloca %string, align 8
  %3 = alloca %slice.7, align 8
  %4 = alloca %slice.3, align 8
  %5 = alloca %string, align 8
  %6 = alloca %slice.3, align 8
  %7 = alloca %slice.6, align 8
  %8 = alloca %slice.6, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %0, i64 16, i1 false), !dbg !518
  call void @llvm.dbg.value(metadata ptr %2, metadata !519, metadata !DIExpression()), !dbg !518
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !518
  call void @llvm.dbg.value(metadata ptr %3, metadata !520, metadata !DIExpression()), !dbg !518
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %2, i64 16, i1 false), !dbg !521
  call void @io.__internal_print(ptr %4, ptr %5, ptr %3), !dbg !521
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %4, i64 16, i1 false), !dbg !521
  call void @llvm.dbg.declare(metadata ptr %6, metadata !522, metadata !DIExpression()), !dbg !521
  call void @io.builder_to_string(ptr %7, ptr %6), !dbg !523
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %7, i64 16, i1 false), !dbg !523
  call void @llvm.dbg.declare(metadata ptr %8, metadata !524, metadata !DIExpression()), !dbg !523
  %9 = getelementptr inbounds %slice.6, ptr %8, i32 0, i32 1, !dbg !525
  %10 = load ptr, ptr %9, align 8, !dbg !525
  %11 = getelementptr i8, ptr %10, i64 0, !dbg !525
  %12 = getelementptr inbounds %slice.6, ptr %8, i32 0, i32 0, !dbg !525
  %13 = load i64, ptr %12, align 8, !dbg !525
  %14 = trunc i64 %13 to i32, !dbg !525
  call void @os.print(ptr %11, i32 %14), !dbg !525
  call void @"array.free:(*[]u32)->void"(ptr %6), !dbg !526
  call void @"array.free:(*[]u8)->void"(ptr %8), !dbg !527
  ret void, !dbg !528
}

define void @io.println(ptr %0, ptr %1) !dbg !529 {
block_0:
  %2 = alloca %string, align 8
  %3 = alloca %slice.7, align 8
  %4 = alloca %slice.3, align 8
  %5 = alloca %string, align 8
  %6 = alloca %slice.3, align 8
  %7 = alloca %slice.6, align 8
  %8 = alloca %slice.6, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %0, i64 16, i1 false), !dbg !530
  call void @llvm.dbg.value(metadata ptr %2, metadata !531, metadata !DIExpression()), !dbg !530
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !530
  call void @llvm.dbg.value(metadata ptr %3, metadata !532, metadata !DIExpression()), !dbg !530
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %2, i64 16, i1 false), !dbg !533
  call void @io.__internal_print(ptr %4, ptr %5, ptr %3), !dbg !533
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %4, i64 16, i1 false), !dbg !533
  call void @llvm.dbg.declare(metadata ptr %6, metadata !534, metadata !DIExpression()), !dbg !533
  call void @"array.add:(*[]u32,u32)->void"(ptr %6, i32 10), !dbg !535
  call void @io.builder_to_string(ptr %7, ptr %6), !dbg !536
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %7, i64 16, i1 false), !dbg !536
  call void @llvm.dbg.declare(metadata ptr %8, metadata !537, metadata !DIExpression()), !dbg !536
  %9 = getelementptr inbounds %slice.6, ptr %8, i32 0, i32 1, !dbg !538
  %10 = load ptr, ptr %9, align 8, !dbg !538
  %11 = getelementptr i8, ptr %10, i64 0, !dbg !538
  %12 = getelementptr inbounds %slice.6, ptr %8, i32 0, i32 0, !dbg !538
  %13 = load i64, ptr %12, align 8, !dbg !538
  %14 = trunc i64 %13 to i32, !dbg !538
  call void @os.print(ptr %11, i32 %14), !dbg !538
  call void @"array.free:(*[]u32)->void"(ptr %6), !dbg !539
  call void @"array.free:(*[]u8)->void"(ptr %8), !dbg !540
  ret void, !dbg !541
}

define void @io.readln(ptr %0, ptr %1, i32 %2) !dbg !542 {
block_0:
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca %string, align 8
  store ptr %1, ptr %3, align 8, !dbg !545
  call void @llvm.dbg.value(metadata ptr %3, metadata !546, metadata !DIExpression()), !dbg !545
  store i32 %2, ptr %4, align 4, !dbg !545
  call void @llvm.dbg.value(metadata ptr %4, metadata !547, metadata !DIExpression()), !dbg !545
  %9 = load ptr, ptr %3, align 8, !dbg !548
  %10 = getelementptr inbounds %mem.Allocator, ptr %9, i32 0, i32 0, !dbg !548
  %11 = load ptr, ptr %10, align 8, !dbg !548
  %12 = load i32, ptr %4, align 4, !dbg !548
  %13 = zext i32 %12 to i64, !dbg !548
  %14 = load ptr, ptr %3, align 8, !dbg !548
  %15 = call ptr %11(i64 %13, ptr %14), !dbg !548
  store ptr %15, ptr %5, align 8, !dbg !548
  call void @llvm.dbg.declare(metadata ptr %5, metadata !549, metadata !DIExpression()), !dbg !548
  %16 = load ptr, ptr %5, align 8, !dbg !550
  %17 = icmp eq ptr %16, null, !dbg !550
  br i1 %17, label %block_1, label %block_2, !dbg !550

block_1:                                          ; preds = %block_0
  %18 = alloca %string, align 8, !dbg !551
  %String = getelementptr inbounds %string, ptr %18, i32 0, i32 0, !dbg !551
  %Size = getelementptr inbounds %string, ptr %18, i32 0, i32 1, !dbg !551
  store ptr @16, ptr %String, align 8, !dbg !551
  store i64 0, ptr %Size, align 8, !dbg !551
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %18, i64 16, i1 false), !dbg !551
  ret void, !dbg !551

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !551

block_3:                                          ; preds = %block_2
  %19 = load ptr, ptr %5, align 8, !dbg !552
  store ptr %19, ptr %6, align 8, !dbg !552
  call void @llvm.dbg.declare(metadata ptr %6, metadata !553, metadata !DIExpression()), !dbg !552
  %20 = load ptr, ptr %6, align 8, !dbg !554
  %21 = load i32, ptr %4, align 4, !dbg !554
  %22 = call i32 @os.read_stdin_line(ptr %20, i32 %21), !dbg !554
  store i32 %22, ptr %7, align 4, !dbg !554
  call void @llvm.dbg.declare(metadata ptr %7, metadata !555, metadata !DIExpression()), !dbg !554
  %23 = load i32, ptr %7, align 4, !dbg !556
  %24 = icmp eq i32 %23, 0, !dbg !556
  br i1 %24, label %block_4, label %block_5, !dbg !556

block_4:                                          ; preds = %block_3
  %25 = alloca %string, align 8, !dbg !557
  %String1 = getelementptr inbounds %string, ptr %25, i32 0, i32 0, !dbg !557
  %Size2 = getelementptr inbounds %string, ptr %25, i32 0, i32 1, !dbg !557
  store ptr @17, ptr %String1, align 8, !dbg !557
  store i64 0, ptr %Size2, align 8, !dbg !557
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %25, i64 16, i1 false), !dbg !557
  ret void, !dbg !557

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !557

block_6:                                          ; preds = %block_5
  call void @llvm.memset.p0.i64(ptr align 8 %8, i8 0, i64 16, i1 false), !dbg !558
  call void @llvm.dbg.declare(metadata ptr %8, metadata !559, metadata !DIExpression()), !dbg !558
  %26 = getelementptr inbounds %string, ptr %8, i32 0, i32 0, !dbg !560
  %27 = load ptr, ptr %6, align 8, !dbg !560
  store ptr %27, ptr %26, align 8, !dbg !560
  %28 = getelementptr inbounds %string, ptr %8, i32 0, i32 1, !dbg !561
  %29 = load i32, ptr %7, align 4, !dbg !561
  %30 = zext i32 %29 to i64, !dbg !561
  store i64 %30, ptr %28, align 8, !dbg !561
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %8, i64 16, i1 false), !dbg !562
  ret void, !dbg !562
}

define i32 @io.get_next(ptr %0) !dbg !563 {
block_0:
  %1 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  store ptr %0, ptr %1, align 8, !dbg !566
  call void @llvm.dbg.value(metadata ptr %1, metadata !567, metadata !DIExpression()), !dbg !566
  %4 = load ptr, ptr %1, align 8, !dbg !568
  store ptr %4, ptr %2, align 8, !dbg !568
  call void @llvm.dbg.declare(metadata ptr %2, metadata !569, metadata !DIExpression()), !dbg !568
  %5 = load ptr, ptr %2, align 8, !dbg !570
  %6 = load i8, ptr %5, align 1, !dbg !570
  %7 = zext i8 %6 to i32, !dbg !570
  store i32 %7, ptr %3, align 4, !dbg !570
  call void @llvm.dbg.declare(metadata ptr %3, metadata !571, metadata !DIExpression()), !dbg !570
  br label %block_1, !dbg !572

block_1:                                          ; preds = %block_6, %block_0
  br label %block_2, !dbg !572

block_2:                                          ; preds = %block_1
  %8 = load ptr, ptr %2, align 8, !dbg !573
  %9 = load i8, ptr %8, align 1, !dbg !573
  %10 = and i8 %9, -128, !dbg !573
  %11 = icmp ne i8 %10, 0, !dbg !573
  br i1 %11, label %block_4, label %block_5, !dbg !573

block_4:                                          ; preds = %block_2
  %12 = load ptr, ptr %2, align 8, !dbg !574
  %13 = getelementptr i8, ptr %12, i64 1, !dbg !574
  store ptr %13, ptr %2, align 8, !dbg !574
  %14 = load i32, ptr %3, align 4, !dbg !575
  %15 = shl i32 %14, 8, !dbg !575
  %16 = load ptr, ptr %2, align 8, !dbg !575
  %17 = load i8, ptr %16, align 1, !dbg !575
  %18 = zext i8 %17 to i32, !dbg !575
  %19 = or i32 %15, %18, !dbg !575
  store i32 %19, ptr %3, align 4, !dbg !575
  br label %block_6, !dbg !575

block_5:                                          ; preds = %block_2
  %20 = load i32, ptr %3, align 4, !dbg !576
  ret i32 %20, !dbg !576

block_6:                                          ; preds = %block_4
  br label %block_1, !dbg !576

block_3:                                          ; No predecessors!
  %21 = load i32, ptr %3, align 4, !dbg !577
  ret i32 %21, !dbg !577
}

define void @"io.format_float:(type,*[]u32,f32,i32)->void"(i64 %0, ptr %1, float %2, i32 %3) !dbg !578 {
block_0:
  %4 = alloca i64, align 8
  %5 = alloca ptr, align 8
  %6 = alloca float, align 4
  %7 = alloca i32, align 4
  %8 = alloca [256 x i32], align 4
  %9 = alloca [256 x i32], align 4
  %10 = alloca i64, align 8
  %11 = alloca float, align 4
  %12 = alloca i1, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  store i64 %0, ptr %4, align 8, !dbg !582
  call void @llvm.dbg.value(metadata ptr %4, metadata !583, metadata !DIExpression()), !dbg !582
  store ptr %1, ptr %5, align 8, !dbg !582
  call void @llvm.dbg.value(metadata ptr %5, metadata !584, metadata !DIExpression()), !dbg !582
  store float %2, ptr %6, align 4, !dbg !582
  call void @llvm.dbg.value(metadata ptr %6, metadata !585, metadata !DIExpression()), !dbg !582
  store i32 %3, ptr %7, align 4, !dbg !582
  call void @llvm.dbg.value(metadata ptr %7, metadata !586, metadata !DIExpression()), !dbg !582
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %9, ptr align 4 %8, i64 1024, i1 false), !dbg !587
  call void @llvm.dbg.declare(metadata ptr %9, metadata !588, metadata !DIExpression()), !dbg !587
  store i64 0, ptr %10, align 8, !dbg !589
  call void @llvm.dbg.declare(metadata ptr %10, metadata !590, metadata !DIExpression()), !dbg !589
  %16 = load float, ptr %6, align 4, !dbg !591
  store float %16, ptr %11, align 4, !dbg !591
  call void @llvm.dbg.declare(metadata ptr %11, metadata !592, metadata !DIExpression()), !dbg !591
  %17 = load i64, ptr %4, align 8, !dbg !593
  %18 = icmp ne i64 %17, 10, !dbg !593
  %19 = load i64, ptr %4, align 8, !dbg !593
  %20 = icmp ne i64 %19, 11, !dbg !593
  %21 = icmp ne i1 %18, false, !dbg !593
  %22 = icmp ne i1 %20, false, !dbg !593
  %23 = and i1 %21, %22, !dbg !593
  br i1 %23, label %block_1, label %block_2, !dbg !593

block_1:                                          ; preds = %block_0
  ret void, !dbg !594

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !594

block_3:                                          ; preds = %block_2
  %24 = load float, ptr %11, align 4, !dbg !595
  %25 = fcmp oeq float %24, 0.000000e+00, !dbg !595
  br i1 %25, label %block_4, label %block_5, !dbg !595

block_4:                                          ; preds = %block_3
  %26 = load ptr, ptr %5, align 8, !dbg !596
  call void @"array.add:(*[]u32,u32)->void"(ptr %26, i32 48), !dbg !596
  ret void, !dbg !597

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !597

block_6:                                          ; preds = %block_5
  store i1 false, ptr %12, align 1, !dbg !598
  call void @llvm.dbg.declare(metadata ptr %12, metadata !599, metadata !DIExpression()), !dbg !598
  %27 = load float, ptr %11, align 4, !dbg !600
  %28 = fcmp olt float %27, 0.000000e+00, !dbg !600
  br i1 %28, label %block_7, label %block_8, !dbg !600

block_7:                                          ; preds = %block_6
  %29 = load float, ptr %11, align 4, !dbg !601
  %30 = fsub float 0.000000e+00, %29, !dbg !601
  store float %30, ptr %11, align 4, !dbg !601
  store i1 true, ptr %12, align 1, !dbg !602
  br label %block_9, !dbg !602

block_8:                                          ; preds = %block_6
  br label %block_9, !dbg !602

block_9:                                          ; preds = %block_8, %block_7
  %31 = load float, ptr %11, align 4, !dbg !603
  %32 = fadd float %31, 0x3F747AE140000000, !dbg !603
  store float %32, ptr %11, align 4, !dbg !603
  %33 = load float, ptr %11, align 4, !dbg !604
  %34 = fptosi float %33 to i32, !dbg !604
  store i32 %34, ptr %13, align 4, !dbg !604
  call void @llvm.dbg.declare(metadata ptr %13, metadata !605, metadata !DIExpression()), !dbg !604
  %35 = load float, ptr %11, align 4, !dbg !606
  %36 = load i32, ptr %7, align 4, !dbg !606
  %37 = sitofp i32 %36 to float, !dbg !606
  %38 = fmul float %35, %37, !dbg !606
  %39 = fptosi float %38 to i32, !dbg !606
  %40 = load i32, ptr %7, align 4, !dbg !606
  %41 = srem i32 %39, %40, !dbg !606
  store i32 %41, ptr %14, align 4, !dbg !606
  call void @llvm.dbg.declare(metadata ptr %14, metadata !607, metadata !DIExpression()), !dbg !606
  %42 = load i32, ptr %14, align 4, !dbg !608
  %43 = icmp eq i32 %42, 0, !dbg !608
  br i1 %43, label %block_10, label %block_11, !dbg !608

block_10:                                         ; preds = %block_9
  %44 = load i64, ptr %10, align 8, !dbg !609
  %45 = getelementptr [256 x i32], ptr %9, i64 0, i64 %44, !dbg !609
  store i32 48, ptr %45, align 4, !dbg !609
  %46 = load i64, ptr %10, align 8, !dbg !610
  %47 = add i64 %46, 1, !dbg !610
  store i64 %47, ptr %10, align 8, !dbg !610
  br label %block_12, !dbg !610

block_11:                                         ; preds = %block_9
  br label %block_13, !dbg !611

block_13:                                         ; preds = %block_14, %block_11
  %48 = load i32, ptr %14, align 4, !dbg !611
  %49 = icmp sgt i32 %48, 0, !dbg !611
  br i1 %49, label %block_14, label %block_15, !dbg !611

block_14:                                         ; preds = %block_13
  %50 = load i64, ptr %10, align 8, !dbg !612
  %51 = getelementptr [256 x i32], ptr %9, i64 0, i64 %50, !dbg !612
  %52 = load i32, ptr %14, align 4, !dbg !612
  %53 = srem i32 %52, 10, !dbg !612
  %54 = trunc i32 %53 to i8, !dbg !612
  %55 = zext i8 %54 to i32, !dbg !612
  %56 = add i32 48, %55, !dbg !612
  store i32 %56, ptr %51, align 4, !dbg !612
  %57 = load i64, ptr %10, align 8, !dbg !613
  %58 = add i64 %57, 1, !dbg !613
  store i64 %58, ptr %10, align 8, !dbg !613
  %59 = load i32, ptr %14, align 4, !dbg !614
  %60 = sdiv i32 %59, 10, !dbg !614
  store i32 %60, ptr %14, align 4, !dbg !614
  br label %block_13, !dbg !614

block_15:                                         ; preds = %block_13
  br label %block_12, !dbg !614

block_12:                                         ; preds = %block_15, %block_10
  %61 = load i64, ptr %10, align 8, !dbg !615
  %62 = getelementptr [256 x i32], ptr %9, i64 0, i64 %61, !dbg !615
  store i32 46, ptr %62, align 4, !dbg !615
  %63 = load i64, ptr %10, align 8, !dbg !616
  %64 = add i64 %63, 1, !dbg !616
  store i64 %64, ptr %10, align 8, !dbg !616
  %65 = load i32, ptr %13, align 4, !dbg !617
  %66 = icmp eq i32 %65, 0, !dbg !617
  br i1 %66, label %block_16, label %block_17, !dbg !617

block_16:                                         ; preds = %block_12
  %67 = load i64, ptr %10, align 8, !dbg !618
  %68 = getelementptr [256 x i32], ptr %9, i64 0, i64 %67, !dbg !618
  store i32 48, ptr %68, align 4, !dbg !618
  %69 = load i64, ptr %10, align 8, !dbg !619
  %70 = add i64 %69, 1, !dbg !619
  store i64 %70, ptr %10, align 8, !dbg !619
  br label %block_18, !dbg !619

block_17:                                         ; preds = %block_12
  br label %block_19, !dbg !620

block_19:                                         ; preds = %block_20, %block_17
  %71 = load i32, ptr %13, align 4, !dbg !620
  %72 = icmp sgt i32 %71, 0, !dbg !620
  br i1 %72, label %block_20, label %block_21, !dbg !620

block_20:                                         ; preds = %block_19
  %73 = load i64, ptr %10, align 8, !dbg !621
  %74 = getelementptr [256 x i32], ptr %9, i64 0, i64 %73, !dbg !621
  %75 = load i32, ptr %13, align 4, !dbg !621
  %76 = srem i32 %75, 10, !dbg !621
  %77 = add i32 48, %76, !dbg !621
  store i32 %77, ptr %74, align 4, !dbg !621
  %78 = load i64, ptr %10, align 8, !dbg !622
  %79 = add i64 %78, 1, !dbg !622
  store i64 %79, ptr %10, align 8, !dbg !622
  %80 = load i32, ptr %13, align 4, !dbg !623
  %81 = sdiv i32 %80, 10, !dbg !623
  store i32 %81, ptr %13, align 4, !dbg !623
  br label %block_19, !dbg !623

block_21:                                         ; preds = %block_19
  br label %block_18, !dbg !623

block_18:                                         ; preds = %block_21, %block_16
  %82 = load i1, ptr %12, align 1, !dbg !624
  br i1 %82, label %block_22, label %block_23, !dbg !624

block_22:                                         ; preds = %block_18
  %83 = load ptr, ptr %5, align 8, !dbg !625
  call void @"array.add:(*[]u32,u32)->void"(ptr %83, i32 45), !dbg !625
  br label %block_24, !dbg !625

block_23:                                         ; preds = %block_18
  br label %block_24, !dbg !625

block_24:                                         ; preds = %block_23, %block_22
  %84 = load i64, ptr %10, align 8, !dbg !626
  store i64 0, ptr %15, align 8, !dbg !626
  br label %block_25, !dbg !626

block_25:                                         ; preds = %block_27, %block_24
  %85 = load i64, ptr %15, align 8, !dbg !626
  %86 = icmp ult i64 %85, %84, !dbg !626
  br i1 %86, label %block_26, label %block_28, !dbg !626

block_26:                                         ; preds = %block_25
  call void @llvm.dbg.declare(metadata ptr %15, metadata !627, metadata !DIExpression()), !dbg !626
  %87 = load ptr, ptr %5, align 8, !dbg !628
  %88 = load i64, ptr %10, align 8, !dbg !628
  %89 = load i64, ptr %15, align 8, !dbg !628
  %90 = sub i64 %88, %89, !dbg !628
  %91 = sub i64 %90, 1, !dbg !628
  %92 = getelementptr [256 x i32], ptr %9, i64 0, i64 %91, !dbg !628
  %93 = load i32, ptr %92, align 4, !dbg !628
  call void @"array.add:(*[]u32,u32)->void"(ptr %87, i32 %93), !dbg !628
  br label %block_27, !dbg !628

block_27:                                         ; preds = %block_26
  %94 = load i64, ptr %15, align 8, !dbg !628
  %95 = add i64 %94, 1, !dbg !628
  store i64 %95, ptr %15, align 8, !dbg !628
  br label %block_25, !dbg !628

block_28:                                         ; preds = %block_25
  ret void, !dbg !629
}

define void @"io.format_float:(type,*[]u32,f64,i32)->void"(i64 %0, ptr %1, double %2, i32 %3) !dbg !630 {
block_0:
  %4 = alloca i64, align 8
  %5 = alloca ptr, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca [256 x i32], align 4
  %9 = alloca [256 x i32], align 4
  %10 = alloca i64, align 8
  %11 = alloca double, align 8
  %12 = alloca i1, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  store i64 %0, ptr %4, align 8, !dbg !633
  call void @llvm.dbg.value(metadata ptr %4, metadata !634, metadata !DIExpression()), !dbg !633
  store ptr %1, ptr %5, align 8, !dbg !633
  call void @llvm.dbg.value(metadata ptr %5, metadata !635, metadata !DIExpression()), !dbg !633
  store double %2, ptr %6, align 8, !dbg !633
  call void @llvm.dbg.value(metadata ptr %6, metadata !636, metadata !DIExpression()), !dbg !633
  store i32 %3, ptr %7, align 4, !dbg !633
  call void @llvm.dbg.value(metadata ptr %7, metadata !637, metadata !DIExpression()), !dbg !633
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %9, ptr align 4 %8, i64 1024, i1 false), !dbg !638
  call void @llvm.dbg.declare(metadata ptr %9, metadata !639, metadata !DIExpression()), !dbg !638
  store i64 0, ptr %10, align 8, !dbg !640
  call void @llvm.dbg.declare(metadata ptr %10, metadata !641, metadata !DIExpression()), !dbg !640
  %16 = load double, ptr %6, align 8, !dbg !642
  store double %16, ptr %11, align 8, !dbg !642
  call void @llvm.dbg.declare(metadata ptr %11, metadata !643, metadata !DIExpression()), !dbg !642
  %17 = load i64, ptr %4, align 8, !dbg !644
  %18 = icmp ne i64 %17, 10, !dbg !644
  %19 = load i64, ptr %4, align 8, !dbg !644
  %20 = icmp ne i64 %19, 11, !dbg !644
  %21 = icmp ne i1 %18, false, !dbg !644
  %22 = icmp ne i1 %20, false, !dbg !644
  %23 = and i1 %21, %22, !dbg !644
  br i1 %23, label %block_1, label %block_2, !dbg !644

block_1:                                          ; preds = %block_0
  ret void, !dbg !645

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !645

block_3:                                          ; preds = %block_2
  %24 = load double, ptr %11, align 8, !dbg !646
  %25 = fcmp oeq double %24, 0.000000e+00, !dbg !646
  br i1 %25, label %block_4, label %block_5, !dbg !646

block_4:                                          ; preds = %block_3
  %26 = load ptr, ptr %5, align 8, !dbg !647
  call void @"array.add:(*[]u32,u32)->void"(ptr %26, i32 48), !dbg !647
  ret void, !dbg !648

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !648

block_6:                                          ; preds = %block_5
  store i1 false, ptr %12, align 1, !dbg !649
  call void @llvm.dbg.declare(metadata ptr %12, metadata !650, metadata !DIExpression()), !dbg !649
  %27 = load double, ptr %11, align 8, !dbg !651
  %28 = fcmp olt double %27, 0.000000e+00, !dbg !651
  br i1 %28, label %block_7, label %block_8, !dbg !651

block_7:                                          ; preds = %block_6
  %29 = load double, ptr %11, align 8, !dbg !652
  %30 = fsub double 0.000000e+00, %29, !dbg !652
  store double %30, ptr %11, align 8, !dbg !652
  store i1 true, ptr %12, align 1, !dbg !653
  br label %block_9, !dbg !653

block_8:                                          ; preds = %block_6
  br label %block_9, !dbg !653

block_9:                                          ; preds = %block_8, %block_7
  %31 = load double, ptr %11, align 8, !dbg !654
  %32 = fadd double %31, 0x3F747AE140000000, !dbg !654
  store double %32, ptr %11, align 8, !dbg !654
  %33 = load double, ptr %11, align 8, !dbg !655
  %34 = fptosi double %33 to i32, !dbg !655
  store i32 %34, ptr %13, align 4, !dbg !655
  call void @llvm.dbg.declare(metadata ptr %13, metadata !656, metadata !DIExpression()), !dbg !655
  %35 = load double, ptr %11, align 8, !dbg !657
  %36 = load i32, ptr %7, align 4, !dbg !657
  %37 = sitofp i32 %36 to double, !dbg !657
  %38 = fmul double %35, %37, !dbg !657
  %39 = fptosi double %38 to i32, !dbg !657
  %40 = load i32, ptr %7, align 4, !dbg !657
  %41 = srem i32 %39, %40, !dbg !657
  store i32 %41, ptr %14, align 4, !dbg !657
  call void @llvm.dbg.declare(metadata ptr %14, metadata !658, metadata !DIExpression()), !dbg !657
  %42 = load i32, ptr %14, align 4, !dbg !659
  %43 = icmp eq i32 %42, 0, !dbg !659
  br i1 %43, label %block_10, label %block_11, !dbg !659

block_10:                                         ; preds = %block_9
  %44 = load i64, ptr %10, align 8, !dbg !660
  %45 = getelementptr [256 x i32], ptr %9, i64 0, i64 %44, !dbg !660
  store i32 48, ptr %45, align 4, !dbg !660
  %46 = load i64, ptr %10, align 8, !dbg !661
  %47 = add i64 %46, 1, !dbg !661
  store i64 %47, ptr %10, align 8, !dbg !661
  br label %block_12, !dbg !661

block_11:                                         ; preds = %block_9
  br label %block_13, !dbg !662

block_13:                                         ; preds = %block_14, %block_11
  %48 = load i32, ptr %14, align 4, !dbg !662
  %49 = icmp sgt i32 %48, 0, !dbg !662
  br i1 %49, label %block_14, label %block_15, !dbg !662

block_14:                                         ; preds = %block_13
  %50 = load i64, ptr %10, align 8, !dbg !663
  %51 = getelementptr [256 x i32], ptr %9, i64 0, i64 %50, !dbg !663
  %52 = load i32, ptr %14, align 4, !dbg !663
  %53 = srem i32 %52, 10, !dbg !663
  %54 = trunc i32 %53 to i8, !dbg !663
  %55 = zext i8 %54 to i32, !dbg !663
  %56 = add i32 48, %55, !dbg !663
  store i32 %56, ptr %51, align 4, !dbg !663
  %57 = load i64, ptr %10, align 8, !dbg !664
  %58 = add i64 %57, 1, !dbg !664
  store i64 %58, ptr %10, align 8, !dbg !664
  %59 = load i32, ptr %14, align 4, !dbg !665
  %60 = sdiv i32 %59, 10, !dbg !665
  store i32 %60, ptr %14, align 4, !dbg !665
  br label %block_13, !dbg !665

block_15:                                         ; preds = %block_13
  br label %block_12, !dbg !665

block_12:                                         ; preds = %block_15, %block_10
  %61 = load i64, ptr %10, align 8, !dbg !666
  %62 = getelementptr [256 x i32], ptr %9, i64 0, i64 %61, !dbg !666
  store i32 46, ptr %62, align 4, !dbg !666
  %63 = load i64, ptr %10, align 8, !dbg !667
  %64 = add i64 %63, 1, !dbg !667
  store i64 %64, ptr %10, align 8, !dbg !667
  %65 = load i32, ptr %13, align 4, !dbg !668
  %66 = icmp eq i32 %65, 0, !dbg !668
  br i1 %66, label %block_16, label %block_17, !dbg !668

block_16:                                         ; preds = %block_12
  %67 = load i64, ptr %10, align 8, !dbg !669
  %68 = getelementptr [256 x i32], ptr %9, i64 0, i64 %67, !dbg !669
  store i32 48, ptr %68, align 4, !dbg !669
  %69 = load i64, ptr %10, align 8, !dbg !670
  %70 = add i64 %69, 1, !dbg !670
  store i64 %70, ptr %10, align 8, !dbg !670
  br label %block_18, !dbg !670

block_17:                                         ; preds = %block_12
  br label %block_19, !dbg !671

block_19:                                         ; preds = %block_20, %block_17
  %71 = load i32, ptr %13, align 4, !dbg !671
  %72 = icmp sgt i32 %71, 0, !dbg !671
  br i1 %72, label %block_20, label %block_21, !dbg !671

block_20:                                         ; preds = %block_19
  %73 = load i64, ptr %10, align 8, !dbg !672
  %74 = getelementptr [256 x i32], ptr %9, i64 0, i64 %73, !dbg !672
  %75 = load i32, ptr %13, align 4, !dbg !672
  %76 = srem i32 %75, 10, !dbg !672
  %77 = add i32 48, %76, !dbg !672
  store i32 %77, ptr %74, align 4, !dbg !672
  %78 = load i64, ptr %10, align 8, !dbg !673
  %79 = add i64 %78, 1, !dbg !673
  store i64 %79, ptr %10, align 8, !dbg !673
  %80 = load i32, ptr %13, align 4, !dbg !674
  %81 = sdiv i32 %80, 10, !dbg !674
  store i32 %81, ptr %13, align 4, !dbg !674
  br label %block_19, !dbg !674

block_21:                                         ; preds = %block_19
  br label %block_18, !dbg !674

block_18:                                         ; preds = %block_21, %block_16
  %82 = load i1, ptr %12, align 1, !dbg !675
  br i1 %82, label %block_22, label %block_23, !dbg !675

block_22:                                         ; preds = %block_18
  %83 = load ptr, ptr %5, align 8, !dbg !676
  call void @"array.add:(*[]u32,u32)->void"(ptr %83, i32 45), !dbg !676
  br label %block_24, !dbg !676

block_23:                                         ; preds = %block_18
  br label %block_24, !dbg !676

block_24:                                         ; preds = %block_23, %block_22
  %84 = load i64, ptr %10, align 8, !dbg !677
  store i64 0, ptr %15, align 8, !dbg !677
  br label %block_25, !dbg !677

block_25:                                         ; preds = %block_27, %block_24
  %85 = load i64, ptr %15, align 8, !dbg !677
  %86 = icmp ult i64 %85, %84, !dbg !677
  br i1 %86, label %block_26, label %block_28, !dbg !677

block_26:                                         ; preds = %block_25
  call void @llvm.dbg.declare(metadata ptr %15, metadata !678, metadata !DIExpression()), !dbg !677
  %87 = load ptr, ptr %5, align 8, !dbg !679
  %88 = load i64, ptr %10, align 8, !dbg !679
  %89 = load i64, ptr %15, align 8, !dbg !679
  %90 = sub i64 %88, %89, !dbg !679
  %91 = sub i64 %90, 1, !dbg !679
  %92 = getelementptr [256 x i32], ptr %9, i64 0, i64 %91, !dbg !679
  %93 = load i32, ptr %92, align 4, !dbg !679
  call void @"array.add:(*[]u32,u32)->void"(ptr %87, i32 %93), !dbg !679
  br label %block_27, !dbg !679

block_27:                                         ; preds = %block_26
  %94 = load i64, ptr %15, align 8, !dbg !679
  %95 = add i64 %94, 1, !dbg !679
  store i64 %95, ptr %15, align 8, !dbg !679
  br label %block_25, !dbg !679

block_28:                                         ; preds = %block_25
  ret void, !dbg !680
}

declare ptr @mem.generic_alloc(i64, ptr)

declare void @mem.generic_free(ptr, ptr)

declare void @mem.create_generic_allocator(ptr)

declare ptr @mem.arena_alloc(i64, ptr)

declare void @mem.no_free(ptr, ptr)

declare void @mem.create_scratch(ptr, i64)

declare void @mem.destroy_scratch(ptr)

declare ptr @memcpy(ptr, ptr, i64)

declare ptr @memset(ptr, i32, i64)

declare i32 @memcmp(ptr, ptr, i64)

declare void @"mem.make_slice:(type,int,*mem.Allocator)->[]u8"(ptr, i64, i64, ptr)

declare i64 @str.to_int(ptr)

declare void @str.create(ptr, ptr)

declare void @str.append(ptr, ptr)

declare void @str.append_u32(ptr, i32)

declare void @str.append_u8(ptr, i8)

declare void @str.from_builder(ptr, ptr, ptr)

declare void @str.substr(ptr, ptr, i64, i64)

declare i64 @str.get_codepoint_size(ptr)

declare ptr @str.advance(ptr)

declare i32 @str.deref(ptr)

declare i32 @str.index(ptr, i64)

declare void @"array.create:(type,*mem.Allocator)->[]json.KeyValuePair"(ptr, i64, ptr)

declare void @"array.add:(json.KeyValuePair {string,json.Value},json.KeyValuePair {string,json.Value})->void"(ptr, ptr)

declare void @"array.create:(type,*mem.Allocator)->[]json.Value"(ptr, i64, ptr)

declare void @"array.add:(json.Value {json.Type,json.ValueUnion},json.Value {json.Type,json.ValueUnion})->void"(ptr, ptr)

declare void @"array.add:(*[]u32,u32)->void"(ptr, i32)

declare void @"array.create:(type,*mem.Allocator)->[]u8"(ptr, i64, ptr)

declare void @"array.add:(*[]u8,u8)->void"(ptr, i8)

declare void @"array.create:(type,*mem.Allocator)->[]u32"(ptr, i64, ptr)

declare void @"array.free:(*[]u32)->void"(ptr)

declare void @"array.free:(*[]u8)->void"(ptr)

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: write) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!80, !81}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false)
!1 = !DIFile(filename: "io.rcp", directory: "E:\\C_Projects\\ReComp\\std")
!2 = !{!3, !15, !36, !45, !50, !54, !65, !71}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init.TypeKind", scope: !1, file: !1, size: 64, align: 64, elements: !4)
!4 = !{!5, !6, !7, !8, !9, !10, !11, !12, !13, !14}
!5 = !DIEnumerator(name: "Invalid", value: 0, isUnsigned: true)
!6 = !DIEnumerator(name: "Basic", value: 1, isUnsigned: true)
!7 = !DIEnumerator(name: "Function", value: 2, isUnsigned: true)
!8 = !DIEnumerator(name: "Struct", value: 3, isUnsigned: true)
!9 = !DIEnumerator(name: "Pointer", value: 4, isUnsigned: true)
!10 = !DIEnumerator(name: "Array", value: 5, isUnsigned: true)
!11 = !DIEnumerator(name: "Slice", value: 6, isUnsigned: true)
!12 = !DIEnumerator(name: "Vector", value: 7, isUnsigned: true)
!13 = !DIEnumerator(name: "Enum", value: 8, isUnsigned: true)
!14 = !DIEnumerator(name: "Generic", value: 9, isUnsigned: true)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init.BasicKind", scope: !1, file: !1, size: 64, align: 64, elements: !16)
!16 = !{!17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35}
!17 = !DIEnumerator(name: "Bool", value: 0, isUnsigned: true)
!18 = !DIEnumerator(name: "String", value: 1, isUnsigned: true)
!19 = !DIEnumerator(name: "U8", value: 2, isUnsigned: true)
!20 = !DIEnumerator(name: "U16", value: 3, isUnsigned: true)
!21 = !DIEnumerator(name: "U32", value: 4, isUnsigned: true)
!22 = !DIEnumerator(name: "U64", value: 5, isUnsigned: true)
!23 = !DIEnumerator(name: "I8", value: 6, isUnsigned: true)
!24 = !DIEnumerator(name: "I16", value: 7, isUnsigned: true)
!25 = !DIEnumerator(name: "I32", value: 8, isUnsigned: true)
!26 = !DIEnumerator(name: "I64", value: 9, isUnsigned: true)
!27 = !DIEnumerator(name: "F32", value: 10, isUnsigned: true)
!28 = !DIEnumerator(name: "F64", value: 11, isUnsigned: true)
!29 = !DIEnumerator(name: "untypedInteger", value: 12, isUnsigned: true)
!30 = !DIEnumerator(name: "untypedFloat", value: 13, isUnsigned: true)
!31 = !DIEnumerator(name: "Int", value: 14, isUnsigned: true)
!32 = !DIEnumerator(name: "Uint", value: 15, isUnsigned: true)
!33 = !DIEnumerator(name: "Type", value: 16, isUnsigned: true)
!34 = !DIEnumerator(name: "Auto", value: 17, isUnsigned: true)
!35 = !DIEnumerator(name: "Module", value: 18, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init.BasicFlag", scope: !1, file: !1, size: 32, align: 32, elements: !37)
!37 = !{!38, !39, !40, !41, !42, !43, !44}
!38 = !DIEnumerator(name: "Boolean", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "Integer", value: 2, isUnsigned: true)
!40 = !DIEnumerator(name: "Float", value: 4, isUnsigned: true)
!41 = !DIEnumerator(name: "String", value: 8, isUnsigned: true)
!42 = !DIEnumerator(name: "Untyped", value: 32, isUnsigned: true)
!43 = !DIEnumerator(name: "Unsigned", value: 64, isUnsigned: true)
!44 = !DIEnumerator(name: "TypeID", value: 128, isUnsigned: true)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init.StructFlag", scope: !1, file: !1, size: 32, align: 32, elements: !46)
!46 = !{!47, !48, !49}
!47 = !DIEnumerator(name: "Packed", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "Generic", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "Union", value: 4, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init.VectorKind", scope: !1, file: !1, size: 64, align: 64, elements: !51)
!51 = !{!52, !53}
!52 = !DIEnumerator(name: "Float", value: 0, isUnsigned: true)
!53 = !DIEnumerator(name: "Int", value: 1, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "compile.CompileFlag", scope: !1, file: !1, size: 32, align: 32, elements: !55)
!55 = !{!56, !57, !58, !59, !60, !61, !62, !63, !64}
!56 = !DIEnumerator(name: "Debug", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "SanAddress", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "SanMemory", value: 4, isUnsigned: true)
!59 = !DIEnumerator(name: "SanThread", value: 8, isUnsigned: true)
!60 = !DIEnumerator(name: "SanUndefined", value: 16, isUnsigned: true)
!61 = !DIEnumerator(name: "NoStdLib", value: 32, isUnsigned: true)
!62 = !DIEnumerator(name: "SharedLib", value: 64, isUnsigned: true)
!63 = !DIEnumerator(name: "CrossAndroid", value: 128, isUnsigned: true)
!64 = !DIEnumerator(name: "NoLink", value: 256, isUnsigned: true)
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "compile.Arch", scope: !1, file: !1, size: 32, align: 32, elements: !66)
!66 = !{!67, !68, !69, !70}
!67 = !DIEnumerator(name: "x86_64", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "x86", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "Arm32", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "Arm64", value: 4, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "json.Type", scope: !1, file: !1, size: 64, align: 64, elements: !72)
!72 = !{!73, !74, !75, !76, !77, !78, !79}
!73 = !DIEnumerator(name: "Number", value: 0, isUnsigned: true)
!74 = !DIEnumerator(name: "Integer", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "String", value: 2, isUnsigned: true)
!76 = !DIEnumerator(name: "Object", value: 3, isUnsigned: true)
!77 = !DIEnumerator(name: "Array", value: 4, isUnsigned: true)
!78 = !DIEnumerator(name: "Boolean", value: 5, isUnsigned: true)
!79 = !DIEnumerator(name: "Null", value: 6, isUnsigned: true)
!80 = !{i32 2, !"CodeView", i32 1}
!81 = !{i32 2, !"Debug Info Version", i32 3}
!82 = distinct !DISubprogram(name: "push_string", linkageName: "io.push_string", scope: !1, file: !1, line: 9, type: !83, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !99)
!83 = !DISubroutineType(types: !84)
!84 = !{null, !85, !93}
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*[]u32", baseType: !86, size: 64, align: 64, dwarfAddressSpace: 0)
!86 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1, file: !1, size: 128, align: 64, elements: !87)
!87 = !{!88, !90}
!88 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1, file: !1, baseType: !89, size: 64, align: 64)
!89 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !91, size: 64, align: 64, offset: 64)
!91 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u32", baseType: !92, size: 64, align: 64, dwarfAddressSpace: 0)
!92 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!93 = !DICompositeType(tag: DW_TAG_structure_type, name: "string", scope: !1, file: !1, size: 128, elements: !94)
!94 = !{!95, !98}
!95 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !96, size: 64, align: 64)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u8", baseType: !97, size: 64, align: 64, dwarfAddressSpace: 0)
!97 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1, file: !1, baseType: !89, size: 64, align: 64, offset: 64)
!99 = !{}
!100 = !DILocation(line: 9, scope: !82)
!101 = !DILocalVariable(name: "b", scope: !82, file: !1, line: 9, type: !85)
!102 = !DILocalVariable(name: "to_push", arg: 1, scope: !82, file: !1, line: 9, type: !93)
!103 = !DILocation(line: 10, scope: !82)
!104 = !DILocalVariable(name: "c", scope: !82, file: !1, line: 10, type: !92)
!105 = !DILocalVariable(name: "i", scope: !82, file: !1, line: 10, type: !89)
!106 = !DILocation(line: 11, scope: !82)
!107 = !DILocation(line: 13, scope: !82)
!108 = distinct !DISubprogram(name: "format_uint", linkageName: "io.format_uint", scope: !1, file: !1, line: 15, type: !109, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !99)
!109 = !DISubroutineType(types: !110)
!110 = !{null, !85, !111}
!111 = !DIBasicType(name: "uint", size: 64, encoding: DW_ATE_unsigned)
!112 = !DILocation(line: 15, scope: !108)
!113 = !DILocalVariable(name: "b", scope: !108, file: !1, line: 15, type: !85)
!114 = !DILocalVariable(name: "num_in", arg: 1, scope: !108, file: !1, line: 15, type: !111)
!115 = !DILocation(line: 16, scope: !108)
!116 = !DILocalVariable(name: "temp", scope: !108, file: !1, line: 16, type: !117)
!117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 8192, align: 32, elements: !118)
!118 = !{!119}
!119 = !DISubrange(count: 256, lowerBound: 0)
!120 = !DILocation(line: 17, scope: !108)
!121 = !DILocalVariable(name: "num", scope: !108, file: !1, line: 17, type: !111)
!122 = !DILocation(line: 18, scope: !108)
!123 = !DILocation(line: 19, scope: !108)
!124 = !DILocation(line: 20, scope: !108)
!125 = !DILocation(line: 23, scope: !108)
!126 = !DILocalVariable(name: "count", scope: !108, file: !1, line: 23, type: !89)
!127 = !DILocation(line: 24, scope: !108)
!128 = !DILocation(line: 25, scope: !108)
!129 = !DILocalVariable(name: "digit", scope: !108, file: !1, line: 25, type: !111)
!130 = !DILocation(line: 26, scope: !108)
!131 = !DILocation(line: 27, scope: !108)
!132 = !DILocalVariable(name: "c", scope: !108, file: !1, line: 27, type: !111)
!133 = !DILocation(line: 28, scope: !108)
!134 = !DILocation(line: 29, scope: !108)
!135 = !DILocation(line: 32, scope: !108)
!136 = !DILocalVariable(name: "i", scope: !108, file: !1, line: 32, type: !89)
!137 = !DILocation(line: 33, scope: !108)
!138 = !DILocation(line: 35, scope: !108)
!139 = distinct !DISubprogram(name: "format_int", linkageName: "io.format_int", scope: !1, file: !1, line: 37, type: !140, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !99)
!140 = !DISubroutineType(types: !141)
!141 = !{null, !85, !89}
!142 = !DILocation(line: 37, scope: !139)
!143 = !DILocalVariable(name: "b", scope: !139, file: !1, line: 37, type: !85)
!144 = !DILocalVariable(name: "num_in", arg: 1, scope: !139, file: !1, line: 37, type: !89)
!145 = !DILocation(line: 38, scope: !139)
!146 = !DILocalVariable(name: "temp", scope: !139, file: !1, line: 38, type: !117)
!147 = !DILocation(line: 39, scope: !139)
!148 = !DILocalVariable(name: "num", scope: !139, file: !1, line: 39, type: !89)
!149 = !DILocation(line: 40, scope: !139)
!150 = !DILocation(line: 41, scope: !139)
!151 = !DILocation(line: 42, scope: !139)
!152 = !DILocation(line: 45, scope: !139)
!153 = !DILocalVariable(name: "is_neg", scope: !139, file: !1, line: 45, type: !154)
!154 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!155 = !DILocation(line: 46, scope: !139)
!156 = !DILocation(line: 47, scope: !139)
!157 = !DILocation(line: 48, scope: !139)
!158 = !DILocation(line: 51, scope: !139)
!159 = !DILocalVariable(name: "count", scope: !139, file: !1, line: 51, type: !89)
!160 = !DILocation(line: 52, scope: !139)
!161 = !DILocation(line: 53, scope: !139)
!162 = !DILocalVariable(name: "digit", scope: !139, file: !1, line: 53, type: !89)
!163 = !DILocation(line: 54, scope: !139)
!164 = !DILocation(line: 55, scope: !139)
!165 = !DILocalVariable(name: "c", scope: !139, file: !1, line: 55, type: !92)
!166 = !DILocation(line: 56, scope: !139)
!167 = !DILocation(line: 57, scope: !139)
!168 = !DILocation(line: 60, scope: !139)
!169 = !DILocation(line: 62, scope: !139)
!170 = !DILocalVariable(name: "i", scope: !139, file: !1, line: 62, type: !89)
!171 = !DILocation(line: 63, scope: !139)
!172 = !DILocation(line: 65, scope: !139)
!173 = distinct !DISubprogram(name: "print_typetype", linkageName: "io.print_typetype", scope: !1, file: !1, line: 127, type: !174, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !99)
!174 = !DISubroutineType(types: !175)
!175 = !{null, !85, !176}
!176 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.TypeInfo", scope: !1, file: !1, size: 384, elements: !177)
!177 = !{!178, !179}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1, file: !1, baseType: !3, size: 64, align: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !1, file: !1, baseType: !180, size: 320, align: 64, offset: 64)
!180 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.TypeUnion", scope: !1, file: !1, size: 320, elements: !181)
!181 = !{!182, !189, !203, !212, !217, !222, !225, !234, !239}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !1, file: !1, baseType: !183, size: 256, align: 64)
!183 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.BasicType", scope: !1, file: !1, size: 256, elements: !184)
!184 = !{!185, !186, !187, !188}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1, file: !1, baseType: !15, size: 64, align: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1, file: !1, baseType: !92, size: 32, align: 32, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1, file: !1, baseType: !92, size: 32, align: 32, offset: 96)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1, file: !1, baseType: !93, size: 128, align: 64, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "struct_", scope: !1, file: !1, baseType: !190, size: 320, align: 64)
!190 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.StructType", scope: !1, file: !1, size: 320, elements: !191)
!191 = !{!192, !188, !202}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "members", scope: !1, file: !1, baseType: !193, size: 128, align: 64)
!193 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1, file: !1, size: 128, align: 64, elements: !194)
!194 = !{!88, !195}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !196, size: 64, align: 64, offset: 64)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*init.StructMember", baseType: !197, size: 64, align: 64, dwarfAddressSpace: 0)
!197 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.StructMember", scope: !1, file: !1, size: 192, elements: !198)
!198 = !{!199, !200}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1, file: !1, baseType: !93, size: 128, align: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !1, file: !1, baseType: !201, size: 64, align: 64, offset: 128)
!201 = !DIBasicType(name: "type", size: 64, encoding: DW_ATE_unsigned)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1, file: !1, baseType: !92, size: 32, align: 32, offset: 256)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1, file: !1, baseType: !204, size: 256, align: 64)
!204 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.FunctionType", scope: !1, file: !1, size: 256, elements: !205)
!205 = !{!206, !211}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "returns", scope: !1, file: !1, baseType: !207, size: 128, align: 64)
!207 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1, file: !1, size: 128, align: 64, elements: !208)
!208 = !{!88, !209}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !210, size: 64, align: 64, offset: 64)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*type", baseType: !201, size: 64, align: 64, dwarfAddressSpace: 0)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "args_t", scope: !1, file: !1, baseType: !207, size: 128, align: 64, offset: 128)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1, file: !1, baseType: !213, size: 128, align: 64)
!213 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.PointerType", scope: !1, file: !1, size: 128, elements: !214)
!214 = !{!215, !216}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "pointee", scope: !1, file: !1, baseType: !201, size: 64, align: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "is_optional", scope: !1, file: !1, baseType: !154, size: 8, align: 8, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !1, file: !1, baseType: !218, size: 128, align: 64)
!218 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.ArrayType", scope: !1, file: !1, size: 128, elements: !219)
!219 = !{!220, !221}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !1, file: !1, baseType: !201, size: 64, align: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "member_count", scope: !1, file: !1, baseType: !92, size: 32, align: 32, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "slice", scope: !1, file: !1, baseType: !223, size: 64, align: 64)
!223 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.SliceType", scope: !1, file: !1, size: 64, elements: !224)
!224 = !{!220}
!225 = !DIDerivedType(tag: DW_TAG_member, name: "enum_", scope: !1, file: !1, baseType: !226, size: 320, align: 64)
!226 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.EnumType", scope: !1, file: !1, size: 320, elements: !227)
!227 = !{!199, !228, !233}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "member_names", scope: !1, file: !1, baseType: !229, size: 128, align: 64, offset: 128)
!229 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1, file: !1, size: 128, align: 64, elements: !230)
!230 = !{!88, !231}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !232, size: 64, align: 64, offset: 64)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*string", baseType: !93, size: 64, align: 64, dwarfAddressSpace: 0)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !1, file: !1, baseType: !201, size: 64, align: 64, offset: 256)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !1, file: !1, baseType: !235, size: 128, align: 64)
!235 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.VectorType", scope: !1, file: !1, size: 128, elements: !236)
!236 = !{!237, !238}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1, file: !1, baseType: !50, size: 64, align: 64)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "elem_count", scope: !1, file: !1, baseType: !92, size: 32, align: 32, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !1, file: !1, baseType: !240, size: 128, align: 64)
!240 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.GenericType", scope: !1, file: !1, size: 128, elements: !241)
!241 = !{!199}
!242 = !DILocation(line: 127, scope: !173)
!243 = !DILocalVariable(name: "b", scope: !173, file: !1, line: 127, type: !85)
!244 = !DILocalVariable(name: "info", arg: 1, scope: !173, file: !1, line: 127, type: !176)
!245 = !DILocation(line: 128, scope: !173)
!246 = !DILocation(line: 130, scope: !173)
!247 = !DILocation(line: 133, scope: !173)
!248 = !DILocation(line: 136, scope: !173)
!249 = !DILocation(line: 137, scope: !173)
!250 = !DILocalVariable(name: "args", scope: !173, file: !1, line: 137, type: !207)
!251 = !DILocation(line: 138, scope: !173)
!252 = !DILocalVariable(name: "arg", scope: !173, file: !1, line: 138, type: !201)
!253 = !DILocalVariable(name: "i", scope: !173, file: !1, line: 138, type: !89)
!254 = !DILocation(line: 139, scope: !173)
!255 = !DILocation(line: 140, scope: !173)
!256 = !DILocation(line: 141, scope: !173)
!257 = !DILocation(line: 144, scope: !173)
!258 = !DILocation(line: 145, scope: !173)
!259 = !DILocation(line: 146, scope: !173)
!260 = !DILocation(line: 147, scope: !173)
!261 = !DILocalVariable(name: "t", scope: !173, file: !1, line: 147, type: !201)
!262 = !DILocalVariable(name: "i", scope: !173, file: !1, line: 147, type: !89)
!263 = !DILocation(line: 148, scope: !173)
!264 = !DILocation(line: 149, scope: !173)
!265 = !DILocation(line: 150, scope: !173)
!266 = !DILocation(line: 155, scope: !173)
!267 = !DILocation(line: 158, scope: !173)
!268 = !DILocation(line: 159, scope: !173)
!269 = !DILocation(line: 162, scope: !173)
!270 = !DILocation(line: 163, scope: !173)
!271 = !DILocation(line: 166, scope: !173)
!272 = !DILocation(line: 167, scope: !173)
!273 = !DILocation(line: 170, scope: !173)
!274 = !DILocation(line: 173, scope: !173)
!275 = !DILocation(line: 176, scope: !173)
!276 = !DILocation(line: 180, scope: !173)
!277 = distinct !DISubprogram(name: "print_type", linkageName: "io.print_type", scope: !1, file: !1, line: 182, type: !278, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !99)
!278 = !DISubroutineType(types: !279)
!279 = !{null, !85, !280}
!280 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.Arg", scope: !1, file: !1, size: 128, elements: !281)
!281 = !{!220, !282}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1, file: !1, baseType: !283, size: 64, align: 64, offset: 64)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*void", baseType: null, size: 64, align: 64, dwarfAddressSpace: 0)
!284 = !DILocation(line: 182, scope: !277)
!285 = !DILocalVariable(name: "b", scope: !277, file: !1, line: 182, type: !85)
!286 = !DILocalVariable(name: "arg", arg: 1, scope: !277, file: !1, line: 182, type: !280)
!287 = !DILocation(line: 183, scope: !277)
!288 = !DILocalVariable(name: "t", scope: !277, file: !1, line: 183, type: !176)
!289 = !DILocation(line: 184, scope: !277)
!290 = !DILocation(line: 188, scope: !277)
!291 = !DILocalVariable(name: "basic", scope: !277, file: !1, line: 188, type: !183)
!292 = !DILocation(line: 189, scope: !277)
!293 = !DILocation(line: 190, scope: !277)
!294 = !DILocation(line: 191, scope: !277)
!295 = !DILocation(line: 193, scope: !277)
!296 = !DILocation(line: 196, scope: !277)
!297 = !DILocation(line: 197, scope: !277)
!298 = !DILocalVariable(name: "str", scope: !277, file: !1, line: 197, type: !93)
!299 = !DILocation(line: 198, scope: !277)
!300 = !DILocation(line: 207, scope: !277)
!301 = !DILocation(line: 208, scope: !277)
!302 = !DILocalVariable(name: "num", scope: !277, file: !1, line: 208, type: !111)
!303 = !DILocation(line: 209, scope: !277)
!304 = !DILocation(line: 211, scope: !277)
!305 = !DILocation(line: 212, scope: !277)
!306 = !DILocalVariable(name: "num", scope: !277, file: !1, line: 212, type: !111)
!307 = !DILocation(line: 213, scope: !277)
!308 = !DILocation(line: 215, scope: !277)
!309 = !DILocation(line: 216, scope: !277)
!310 = !DILocalVariable(name: "num", scope: !277, file: !1, line: 216, type: !111)
!311 = !DILocation(line: 217, scope: !277)
!312 = !DILocation(line: 219, scope: !277)
!313 = !DILocation(line: 220, scope: !277)
!314 = !DILocalVariable(name: "num", scope: !277, file: !1, line: 220, type: !111)
!315 = !DILocation(line: 221, scope: !277)
!316 = !DILocation(line: 223, scope: !277)
!317 = !DILocation(line: 224, scope: !277)
!318 = !DILocalVariable(name: "num", scope: !277, file: !1, line: 224, type: !89)
!319 = !DILocation(line: 225, scope: !277)
!320 = !DILocation(line: 227, scope: !277)
!321 = !DILocation(line: 228, scope: !277)
!322 = !DILocalVariable(name: "num", scope: !277, file: !1, line: 228, type: !89)
!323 = !DILocation(line: 229, scope: !277)
!324 = !DILocation(line: 231, scope: !277)
!325 = !DILocation(line: 232, scope: !277)
!326 = !DILocalVariable(name: "num", scope: !277, file: !1, line: 232, type: !89)
!327 = !DILocation(line: 233, scope: !277)
!328 = !DILocation(line: 235, scope: !277)
!329 = !DILocation(line: 236, scope: !277)
!330 = !DILocalVariable(name: "num", scope: !277, file: !1, line: 236, type: !89)
!331 = !DILocation(line: 237, scope: !277)
!332 = !DILocation(line: 239, scope: !277)
!333 = !DILocation(line: 240, scope: !277)
!334 = !DILocalVariable(name: "num", scope: !277, file: !1, line: 240, type: !89)
!335 = !DILocation(line: 241, scope: !277)
!336 = !DILocation(line: 243, scope: !277)
!337 = !DILocation(line: 244, scope: !277)
!338 = !DILocalVariable(name: "num", scope: !277, file: !1, line: 244, type: !111)
!339 = !DILocation(line: 245, scope: !277)
!340 = !DILocation(line: 247, scope: !277)
!341 = !DILocation(line: 248, scope: !277)
!342 = !DILocalVariable(name: "num", scope: !277, file: !1, line: 248, type: !343)
!343 = !DIBasicType(name: "f32", size: 32, encoding: DW_ATE_float)
!344 = !DILocation(line: 249, scope: !277)
!345 = !DILocation(line: 251, scope: !277)
!346 = !DILocation(line: 252, scope: !277)
!347 = !DILocalVariable(name: "num", scope: !277, file: !1, line: 252, type: !348)
!348 = !DIBasicType(name: "f64", size: 64, encoding: DW_ATE_float)
!349 = !DILocation(line: 253, scope: !277)
!350 = !DILocation(line: 255, scope: !277)
!351 = !DILocation(line: 256, scope: !277)
!352 = !DILocalVariable(name: "pt", scope: !277, file: !1, line: 256, type: !201)
!353 = !DILocation(line: 257, scope: !277)
!354 = !DILocalVariable(name: "info", scope: !277, file: !1, line: 257, type: !176)
!355 = !DILocation(line: 258, scope: !277)
!356 = !DILocation(line: 261, scope: !277)
!357 = !DILocation(line: 267, scope: !277)
!358 = !DILocalVariable(name: "st", scope: !277, file: !1, line: 267, type: !190)
!359 = !DILocation(line: 268, scope: !277)
!360 = !DILocation(line: 269, scope: !277)
!361 = !DILocation(line: 270, scope: !277)
!362 = !DILocalVariable(name: "n", scope: !277, file: !1, line: 270, type: !89)
!363 = !DILocation(line: 271, scope: !277)
!364 = !DILocalVariable(name: "m", scope: !277, file: !1, line: 271, type: !197)
!365 = !DILocation(line: 272, scope: !277)
!366 = !DILocation(line: 273, scope: !277)
!367 = !DILocation(line: 274, scope: !277)
!368 = !DILocalVariable(name: "ptr", scope: !277, file: !1, line: 274, type: !96)
!369 = !DILocation(line: 275, scope: !277)
!370 = !DILocalVariable(name: "offset", scope: !277, file: !1, line: 275, type: !89)
!371 = !DILocation(line: 276, scope: !277)
!372 = !DILocalVariable(name: "mem_arg", scope: !277, file: !1, line: 276, type: !280)
!373 = !DILocation(line: 280, scope: !277)
!374 = !DILocation(line: 282, scope: !277)
!375 = !DILocation(line: 283, scope: !277)
!376 = !DILocation(line: 284, scope: !277)
!377 = !DILocation(line: 287, scope: !277)
!378 = !DILocation(line: 298, scope: !277)
!379 = !DILocalVariable(name: "e", scope: !277, file: !1, line: 298, type: !226)
!380 = !DILocation(line: 299, scope: !277)
!381 = !DILocalVariable(name: "size", scope: !277, file: !1, line: 299, type: !89)
!382 = !DILocation(line: 300, scope: !277)
!383 = !DILocalVariable(name: "val", scope: !277, file: !1, line: 300, type: !89)
!384 = !DILocation(line: 307, scope: !277)
!385 = !DILocation(line: 308, scope: !277)
!386 = !DILocation(line: 314, scope: !277)
!387 = distinct !DISubprogram(name: "builder_to_string", linkageName: "io.builder_to_string", scope: !1, file: !1, line: 316, type: !388, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !99)
!388 = !DISubroutineType(types: !389)
!389 = !{!390, !85}
!390 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1, file: !1, size: 128, align: 64, elements: !391)
!391 = !{!88, !392}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !96, size: 64, align: 64, offset: 64)
!393 = !DILocation(line: 316, scope: !387)
!394 = !DILocalVariable(name: "b_in", scope: !387, file: !1, line: 316, type: !85)
!395 = !DILocation(line: 317, scope: !387)
!396 = !DILocalVariable(name: "b", scope: !387, file: !1, line: 317, type: !85)
!397 = !DILocation(line: 318, scope: !387)
!398 = !DILocalVariable(name: "alloc", scope: !387, file: !1, line: 318, type: !399)
!399 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem.Allocator", scope: !1, file: !1, size: 192, elements: !400)
!400 = !{!401, !407, !411}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1, file: !1, baseType: !402, size: 64, align: 64)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*fn(int, *mem.Allocator) -> ?*", baseType: !403, size: 64, align: 64, dwarfAddressSpace: 0)
!403 = !DISubroutineType(types: !404)
!404 = !{!283, !89, !405}
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mem.Allocator", baseType: !406, size: 64, align: 64, dwarfAddressSpace: 0)
!406 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem.Allocator", scope: !1, file: !1, size: 192, align: 64, flags: DIFlagFwdDecl)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1, file: !1, baseType: !408, size: 64, align: 64, offset: 64)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*fn(*, *mem.Allocator)", baseType: !409, size: 64, align: 64, dwarfAddressSpace: 0)
!409 = !DISubroutineType(types: !410)
!410 = !{null, !283, !405}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !283, size: 64, align: 64, offset: 128)
!412 = !DILocation(line: 319, scope: !387)
!413 = !DILocalVariable(name: "res", scope: !387, file: !1, line: 319, type: !390)
!414 = !DILocation(line: 321, scope: !387)
!415 = !DILocalVariable(name: "i", scope: !387, file: !1, line: 321, type: !89)
!416 = !DILocation(line: 322, scope: !387)
!417 = !DILocalVariable(name: "ptr", scope: !387, file: !1, line: 322, type: !96)
!418 = !DILocation(line: 323, scope: !387)
!419 = !DILocation(line: 324, scope: !387)
!420 = !DILocation(line: 325, scope: !387)
!421 = !DILocation(line: 328, scope: !387)
!422 = !DILocalVariable(name: "size", scope: !387, file: !1, line: 328, type: !89)
!423 = !DILocation(line: 329, scope: !387)
!424 = !DILocalVariable(name: "j", scope: !387, file: !1, line: 329, type: !89)
!425 = !DILocation(line: 330, scope: !387)
!426 = !DILocation(line: 334, scope: !387)
!427 = distinct !DISubprogram(name: "print_type_with_formatter", linkageName: "io.print_type_with_formatter", scope: !1, file: !1, line: 337, type: !428, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !99)
!428 = !DISubroutineType(types: !429)
!429 = !{null, !85, !92, !280}
!430 = !DILocation(line: 337, scope: !427)
!431 = !DILocalVariable(name: "b", scope: !427, file: !1, line: 337, type: !85)
!432 = !DILocalVariable(name: "c", arg: 1, scope: !427, file: !1, line: 337, type: !92)
!433 = !DILocalVariable(name: "arg", arg: 2, scope: !427, file: !1, line: 337, type: !280)
!434 = !DILocation(line: 338, scope: !427)
!435 = !DILocalVariable(name: "t", scope: !427, file: !1, line: 338, type: !176)
!436 = !DILocation(line: 339, scope: !427)
!437 = !DILocation(line: 340, scope: !427)
!438 = !DILocalVariable(name: "str", scope: !427, file: !1, line: 340, type: !96)
!439 = !DILocation(line: 341, scope: !427)
!440 = !DILocalVariable(name: "i", scope: !427, file: !1, line: 341, type: !89)
!441 = !DILocation(line: 342, scope: !427)
!442 = !DILocation(line: 344, scope: !427)
!443 = !DILocation(line: 346, scope: !427)
!444 = !DILocalVariable(name: "c", scope: !427, file: !1, line: 346, type: !92)
!445 = !DILocation(line: 347, scope: !427)
!446 = !DILocation(line: 348, scope: !427)
!447 = !DILocation(line: 349, scope: !427)
!448 = !DILocation(line: 350, scope: !427)
!449 = !DILocation(line: 352, scope: !427)
!450 = !DILocation(line: 354, scope: !427)
!451 = !DILocation(line: 355, scope: !427)
!452 = !DILocation(line: 356, scope: !427)
!453 = !DILocation(line: 358, scope: !427)
!454 = distinct !DISubprogram(name: "__internal_print", linkageName: "io.__internal_print", scope: !1, file: !1, line: 361, type: !455, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !99)
!455 = !DISubroutineType(types: !456)
!456 = !{!86, !93, !457}
!457 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1, file: !1, size: 128, align: 64, elements: !458)
!458 = !{!88, !459}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !460, size: 64, align: 64, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*init.Arg", baseType: !280, size: 64, align: 64, dwarfAddressSpace: 0)
!461 = !DILocation(line: 361, scope: !454)
!462 = !DILocalVariable(name: "fmt", scope: !454, file: !1, line: 361, type: !93)
!463 = !DILocalVariable(name: "args", arg: 1, scope: !454, file: !1, line: 361, type: !457)
!464 = !DILocation(line: 362, scope: !454)
!465 = !DILocalVariable(name: "alloc", scope: !454, file: !1, line: 362, type: !399)
!466 = !DILocation(line: 363, scope: !454)
!467 = !DILocalVariable(name: "builder", scope: !454, file: !1, line: 363, type: !86)
!468 = !DILocation(line: 364, scope: !454)
!469 = !DILocalVariable(name: "arg_count", scope: !454, file: !1, line: 364, type: !89)
!470 = !DILocation(line: 365, scope: !454)
!471 = !DILocalVariable(name: "need_to_print_arg", scope: !454, file: !1, line: 365, type: !154)
!472 = !DILocation(line: 366, scope: !454)
!473 = !DILocalVariable(name: "c", scope: !454, file: !1, line: 366, type: !92)
!474 = !DILocalVariable(name: "i", scope: !454, file: !1, line: 366, type: !89)
!475 = !DILocation(line: 367, scope: !454)
!476 = !DILocation(line: 368, scope: !454)
!477 = !DILocation(line: 370, scope: !454)
!478 = !DILocation(line: 371, scope: !454)
!479 = !DILocalVariable(name: "arg", scope: !454, file: !1, line: 371, type: !280)
!480 = !DILocation(line: 372, scope: !454)
!481 = !DILocation(line: 373, scope: !454)
!482 = !DILocation(line: 374, scope: !454)
!483 = !DILocation(line: 376, scope: !454)
!484 = !DILocation(line: 381, scope: !454)
!485 = !DILocation(line: 382, scope: !454)
!486 = !DILocalVariable(name: "arg", scope: !454, file: !1, line: 382, type: !280)
!487 = !DILocation(line: 383, scope: !454)
!488 = !DILocation(line: 384, scope: !454)
!489 = !DILocation(line: 385, scope: !454)
!490 = !DILocation(line: 388, scope: !454)
!491 = distinct !DISubprogram(name: "vsprint", linkageName: "io.vsprint", scope: !1, file: !1, line: 392, type: !492, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !99)
!492 = !DISubroutineType(types: !493)
!493 = !{!93, !93, !457}
!494 = !DILocation(line: 392, scope: !491)
!495 = !DILocalVariable(name: "str", scope: !491, file: !1, line: 392, type: !93)
!496 = !DILocalVariable(name: "args", arg: 1, scope: !491, file: !1, line: 392, type: !457)
!497 = !DILocation(line: 393, scope: !491)
!498 = !DILocalVariable(name: "builder", scope: !491, file: !1, line: 393, type: !86)
!499 = !DILocation(line: 394, scope: !491)
!500 = !DILocalVariable(name: "res", scope: !491, file: !1, line: 394, type: !390)
!501 = !DILocation(line: 395, scope: !491)
!502 = !DILocation(line: 396, scope: !491)
!503 = distinct !DISubprogram(name: "sprint", linkageName: "io.sprint", scope: !1, file: !1, line: 399, type: !504, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !99)
!504 = !DISubroutineType(types: !505)
!505 = !{!93, !93}
!506 = !DILocation(line: 399, scope: !503)
!507 = !DILocalVariable(name: "str", scope: !503, file: !1, line: 399, type: !93)
!508 = !DILocalVariable(name: "args", arg: 1, scope: !503, file: !1, line: 399, type: !457)
!509 = !DILocation(line: 400, scope: !503)
!510 = !DILocalVariable(name: "builder", scope: !503, file: !1, line: 400, type: !86)
!511 = !DILocation(line: 401, scope: !503)
!512 = !DILocalVariable(name: "res", scope: !503, file: !1, line: 401, type: !390)
!513 = !DILocation(line: 402, scope: !503)
!514 = !DILocation(line: 403, scope: !503)
!515 = distinct !DISubprogram(name: "print", linkageName: "io.print", scope: !1, file: !1, line: 406, type: !516, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !99)
!516 = !DISubroutineType(types: !517)
!517 = !{null, !93}
!518 = !DILocation(line: 406, scope: !515)
!519 = !DILocalVariable(name: "str", scope: !515, file: !1, line: 406, type: !93)
!520 = !DILocalVariable(name: "args", arg: 1, scope: !515, file: !1, line: 406, type: !457)
!521 = !DILocation(line: 407, scope: !515)
!522 = !DILocalVariable(name: "builder", scope: !515, file: !1, line: 407, type: !86)
!523 = !DILocation(line: 408, scope: !515)
!524 = !DILocalVariable(name: "res", scope: !515, file: !1, line: 408, type: !390)
!525 = !DILocation(line: 409, scope: !515)
!526 = !DILocation(line: 410, scope: !515)
!527 = !DILocation(line: 411, scope: !515)
!528 = !DILocation(line: 412, scope: !515)
!529 = distinct !DISubprogram(name: "println", linkageName: "io.println", scope: !1, file: !1, line: 414, type: !516, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !99)
!530 = !DILocation(line: 414, scope: !529)
!531 = !DILocalVariable(name: "str", scope: !529, file: !1, line: 414, type: !93)
!532 = !DILocalVariable(name: "args", arg: 1, scope: !529, file: !1, line: 414, type: !457)
!533 = !DILocation(line: 415, scope: !529)
!534 = !DILocalVariable(name: "builder", scope: !529, file: !1, line: 415, type: !86)
!535 = !DILocation(line: 416, scope: !529)
!536 = !DILocation(line: 417, scope: !529)
!537 = !DILocalVariable(name: "res", scope: !529, file: !1, line: 417, type: !390)
!538 = !DILocation(line: 418, scope: !529)
!539 = !DILocation(line: 419, scope: !529)
!540 = !DILocation(line: 420, scope: !529)
!541 = !DILocation(line: 422, scope: !529)
!542 = distinct !DISubprogram(name: "readln", linkageName: "io.readln", scope: !1, file: !1, line: 424, type: !543, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !99)
!543 = !DISubroutineType(types: !544)
!544 = !{!93, !405, !92}
!545 = !DILocation(line: 424, scope: !542)
!546 = !DILocalVariable(name: "alloc", scope: !542, file: !1, line: 424, type: !405)
!547 = !DILocalVariable(name: "max", arg: 1, scope: !542, file: !1, line: 424, type: !92)
!548 = !DILocation(line: 425, scope: !542)
!549 = !DILocalVariable(name: "mem", scope: !542, file: !1, line: 425, type: !283)
!550 = !DILocation(line: 426, scope: !542)
!551 = !DILocation(line: 427, scope: !542)
!552 = !DILocation(line: 430, scope: !542)
!553 = !DILocalVariable(name: "buf", scope: !542, file: !1, line: 430, type: !96)
!554 = !DILocation(line: 431, scope: !542)
!555 = !DILocalVariable(name: "count", scope: !542, file: !1, line: 431, type: !92)
!556 = !DILocation(line: 432, scope: !542)
!557 = !DILocation(line: 433, scope: !542)
!558 = !DILocation(line: 436, scope: !542)
!559 = !DILocalVariable(name: "res", scope: !542, file: !1, line: 436, type: !93)
!560 = !DILocation(line: 437, scope: !542)
!561 = !DILocation(line: 438, scope: !542)
!562 = !DILocation(line: 440, scope: !542)
!563 = distinct !DISubprogram(name: "get_next", linkageName: "io.get_next", scope: !1, file: !1, line: 443, type: !564, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !99)
!564 = !DISubroutineType(types: !565)
!565 = !{!92, !96}
!566 = !DILocation(line: 443, scope: !563)
!567 = !DILocalVariable(name: "curr", scope: !563, file: !1, line: 443, type: !96)
!568 = !DILocation(line: 444, scope: !563)
!569 = !DILocalVariable(name: "scan", scope: !563, file: !1, line: 444, type: !96)
!570 = !DILocation(line: 445, scope: !563)
!571 = !DILocalVariable(name: "codepoint", scope: !563, file: !1, line: 445, type: !92)
!572 = !DILocation(line: 446, scope: !563)
!573 = !DILocation(line: 447, scope: !563)
!574 = !DILocation(line: 448, scope: !563)
!575 = !DILocation(line: 449, scope: !563)
!576 = !DILocation(line: 451, scope: !563)
!577 = !DILocation(line: 454, scope: !563)
!578 = distinct !DISubprogram(name: "format_float:(type,*[]u32,f32,i32)->void", linkageName: "io.format_float:(type,*[]u32,f32,i32)->void", scope: !1, file: !1, line: 67, type: !579, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !99)
!579 = !DISubroutineType(types: !580)
!580 = !{null, !201, !85, !343, !581}
!581 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!582 = !DILocation(line: 67, scope: !578)
!583 = !DILocalVariable(name: "ft", scope: !578, file: !1, line: 67, type: !201)
!584 = !DILocalVariable(name: "b", arg: 1, scope: !578, file: !1, line: 67, type: !85)
!585 = !DILocalVariable(name: "num_in", arg: 2, scope: !578, file: !1, line: 67, type: !343)
!586 = !DILocalVariable(name: "round_at", arg: 3, scope: !578, file: !1, line: 67, type: !581)
!587 = !DILocation(line: 68, scope: !578)
!588 = !DILocalVariable(name: "temp", scope: !578, file: !1, line: 68, type: !117)
!589 = !DILocation(line: 69, scope: !578)
!590 = !DILocalVariable(name: "count", scope: !578, file: !1, line: 69, type: !89)
!591 = !DILocation(line: 70, scope: !578)
!592 = !DILocalVariable(name: "num", scope: !578, file: !1, line: 70, type: !343)
!593 = !DILocation(line: 72, scope: !578)
!594 = !DILocation(line: 73, scope: !578)
!595 = !DILocation(line: 76, scope: !578)
!596 = !DILocation(line: 77, scope: !578)
!597 = !DILocation(line: 78, scope: !578)
!598 = !DILocation(line: 81, scope: !578)
!599 = !DILocalVariable(name: "is_neg", scope: !578, file: !1, line: 81, type: !154)
!600 = !DILocation(line: 82, scope: !578)
!601 = !DILocation(line: 83, scope: !578)
!602 = !DILocation(line: 84, scope: !578)
!603 = !DILocation(line: 87, scope: !578)
!604 = !DILocation(line: 88, scope: !578)
!605 = !DILocalVariable(name: "int_val", scope: !578, file: !1, line: 88, type: !581)
!606 = !DILocation(line: 89, scope: !578)
!607 = !DILocalVariable(name: "dec", scope: !578, file: !1, line: 89, type: !581)
!608 = !DILocation(line: 91, scope: !578)
!609 = !DILocation(line: 92, scope: !578)
!610 = !DILocation(line: 93, scope: !578)
!611 = !DILocation(line: 96, scope: !578)
!612 = !DILocation(line: 97, scope: !578)
!613 = !DILocation(line: 98, scope: !578)
!614 = !DILocation(line: 99, scope: !578)
!615 = !DILocation(line: 103, scope: !578)
!616 = !DILocation(line: 104, scope: !578)
!617 = !DILocation(line: 106, scope: !578)
!618 = !DILocation(line: 107, scope: !578)
!619 = !DILocation(line: 108, scope: !578)
!620 = !DILocation(line: 110, scope: !578)
!621 = !DILocation(line: 111, scope: !578)
!622 = !DILocation(line: 112, scope: !578)
!623 = !DILocation(line: 113, scope: !578)
!624 = !DILocation(line: 118, scope: !578)
!625 = !DILocation(line: 119, scope: !578)
!626 = !DILocation(line: 122, scope: !578)
!627 = !DILocalVariable(name: "i", scope: !578, file: !1, line: 122, type: !89)
!628 = !DILocation(line: 123, scope: !578)
!629 = !DILocation(line: 125, scope: !578)
!630 = distinct !DISubprogram(name: "format_float:(type,*[]u32,f64,i32)->void", linkageName: "io.format_float:(type,*[]u32,f64,i32)->void", scope: !1, file: !1, line: 67, type: !631, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !99)
!631 = !DISubroutineType(types: !632)
!632 = !{null, !201, !85, !348, !581}
!633 = !DILocation(line: 67, scope: !630)
!634 = !DILocalVariable(name: "ft", scope: !630, file: !1, line: 67, type: !201)
!635 = !DILocalVariable(name: "b", arg: 1, scope: !630, file: !1, line: 67, type: !85)
!636 = !DILocalVariable(name: "num_in", arg: 2, scope: !630, file: !1, line: 67, type: !348)
!637 = !DILocalVariable(name: "round_at", arg: 3, scope: !630, file: !1, line: 67, type: !581)
!638 = !DILocation(line: 68, scope: !630)
!639 = !DILocalVariable(name: "temp", scope: !630, file: !1, line: 68, type: !117)
!640 = !DILocation(line: 69, scope: !630)
!641 = !DILocalVariable(name: "count", scope: !630, file: !1, line: 69, type: !89)
!642 = !DILocation(line: 70, scope: !630)
!643 = !DILocalVariable(name: "num", scope: !630, file: !1, line: 70, type: !348)
!644 = !DILocation(line: 72, scope: !630)
!645 = !DILocation(line: 73, scope: !630)
!646 = !DILocation(line: 76, scope: !630)
!647 = !DILocation(line: 77, scope: !630)
!648 = !DILocation(line: 78, scope: !630)
!649 = !DILocation(line: 81, scope: !630)
!650 = !DILocalVariable(name: "is_neg", scope: !630, file: !1, line: 81, type: !154)
!651 = !DILocation(line: 82, scope: !630)
!652 = !DILocation(line: 83, scope: !630)
!653 = !DILocation(line: 84, scope: !630)
!654 = !DILocation(line: 87, scope: !630)
!655 = !DILocation(line: 88, scope: !630)
!656 = !DILocalVariable(name: "int_val", scope: !630, file: !1, line: 88, type: !581)
!657 = !DILocation(line: 89, scope: !630)
!658 = !DILocalVariable(name: "dec", scope: !630, file: !1, line: 89, type: !581)
!659 = !DILocation(line: 91, scope: !630)
!660 = !DILocation(line: 92, scope: !630)
!661 = !DILocation(line: 93, scope: !630)
!662 = !DILocation(line: 96, scope: !630)
!663 = !DILocation(line: 97, scope: !630)
!664 = !DILocation(line: 98, scope: !630)
!665 = !DILocation(line: 99, scope: !630)
!666 = !DILocation(line: 103, scope: !630)
!667 = !DILocation(line: 104, scope: !630)
!668 = !DILocation(line: 106, scope: !630)
!669 = !DILocation(line: 107, scope: !630)
!670 = !DILocation(line: 108, scope: !630)
!671 = !DILocation(line: 110, scope: !630)
!672 = !DILocation(line: 111, scope: !630)
!673 = !DILocation(line: 112, scope: !630)
!674 = !DILocation(line: 113, scope: !630)
!675 = !DILocation(line: 118, scope: !630)
!676 = !DILocation(line: 119, scope: !630)
!677 = !DILocation(line: 122, scope: !630)
!678 = !DILocalVariable(name: "i", scope: !630, file: !1, line: 122, type: !89)
!679 = !DILocation(line: 123, scope: !630)
!680 = !DILocation(line: 125, scope: !630)
